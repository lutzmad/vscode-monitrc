{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "monit",
	"patterns": [{ "include": "#sets" },
		{ "include": "#checks" },
		{ "include": "#comments" },
		{ "include": "#includes"
	}],
	"repository": {
		"expressions": {
			"patterns": [{ "include": "#keywords" },
				{ "include": "#noises" },
				{ "include": "#checks" },
				{ "include": "#strings" },
				{ "include": "#brackets" },
				{ "include": "#programs" },
				{ "include": "#values" },
				{ "include": "#comments" },
				{ "include": "#constants"
			}]
		},
		"keywords": {
			"comment": "Monit keywords",
			"patterns": [{
				"name": "keyword.control.monit",
				"match": "\\b(if|then|failed|tls|ssl[ ]+enable|ssl|enable[ ]+ssl|enable|disable|verify|valid|cacertificatefile|cacertificatepath|certificate|set|daemon|delay|terminal|batch|logfile|log|syslog|facility|httpd|address|interface|link|packet(s)?(/s)?|bytein|byteout|packetin|packetout|upload(ed)?|download(ed)?|up|down|saturation|speed|total|clientpemfile|allowselfcertification|selfsigned|certmd5|pemfile|pemchain|pemkey|rsakey|init|allow|reject|read[-]?only|disk|read|write|service[ ]?time|operation(s)?(/s)?|pidfile|idfile|statefile|path|start|stop|port(number)?|unix(socket)?|ipv4|ipv6|type|proto(col)?|tcpssl|tcp|udp|alert|noalert|mail-format|resource|restart(s)?|cycle(s)?|timeout|retry|checksum|mailserver|hostheader|host|method|get|head|status|default|https|http|apache-status|ftp|smtps|smtp|postfix-policy|pops|pop|imap|imaps|clamav|dns|mysqls|mysql|nntp|ntp3|ssh|redis|mongodb|fail2ban|sieve|spamassassin|dwp|ldap2|ldap3|ldap|rdate|lmtp|rsync|tns|pgsql|websocket|mqtt|origin|version|sip|gps|radius|memcache|target|maxforward|mode|active|passive|manual|onreboot|nostart|laststate|uid|euid|security|attribute(s)?|gid|request|secret|loglimit|closelimit|dnslimit|keepalivelimit|replylimit|requestlimit|startlimit|waitlimit|gracefullimit|cleanuplimit|mem(ory)?|swap|total[ ]?mem(ory)?|core|cpu|total[ ]?cpu|child(ren)?|thread(s)?|time(stamp)?|changed|-sslv2|-sslv3|-tlsv11|-tlsv12|-tlsv13|-tlsv1|sslv2|sslv3|tlsv11|tlsv12|tlsv13|tlsv1|cipher(s)?|auto|sslauto|inode(s)?|space|free|perm(ission)?|exec(ute)?|size|hardlink(s)?|uptime|responsetime|basedir|slot(s)?|eventqueue|match(ing)?|not|ignore|connection|unmonitor|action|icmp|ping4|ping6|ping|echo|send|expect|expectbuffer|limits|sendexpectbuffer|filecontentbuffer|httpcontentbuffer|programoutput|networktimeout|programtimeout|stoptimeout|starttimeout|restarttimeout|exectimeout|cleartext|md5|sha1|crypt|signature|nonexist(s)?|exist(s)?|invalid|data|recovered|passed|succeeded|else|mmonit|url|content|pid|ppid|count|repeat|reminder|instance|hostname|username|password|database|credentials|register|fsflag(s)?|fips|filedescriptors|include|not[ ]+every|every|depend(s)?[ ]+(on[ ]*)?|group)\\b"
			}]
		},
		"noisesx": {
			"comment": "Monit noise keywords",
			"patterns": [{
				"name": "keyword.other.monit",
				"match": "\\b(is|as|are|for|via|on(ly)?|with(in|out)?|program(s)?|and|has|using|use|the|to|sum|than|usage|was|times|but|of|or|does|per|in|last|rate|capacity|activity|option(s)?|ssl[ ]+disable|disable[ ]+ssl)\\b"
			}]
		},
		"sets": {
			"comment": "Monit setting keywords",
			"patterns": [{
				"begin": "(?i)\\b(set[ ]+alert[ ]+([.]+))\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.setalert.monit" },
					"2": { "name": "constant.numeric.monit" }
				},
				"patterns": [{ 
					"name": "keyword.control.setalert.monit",
					"begin": "(not[ ]+)?(on[ ]+)?\\{",
					"end": "\\}",
					"patterns": [{
						"exclude": "#eventoptions"
					}]
				},{
					"name": "keyword.control.process.monit",
					"match": "\\b(with[ ]+)?remainder([ ]+on)?[ ]+[\\d]+([ ]+cycle(s)?)?)"
				},{
					"include": "#formats"
				},{
					"include": "#noises"
				},{
					"include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+daemon[ ]+)([\\d]+)\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.setdaemon.monit" },
					"2": { "name": "constant.numeric.monit" }
				},
				"patterns": [{
					"name": "keyword.control.setdaemon.monit",
					"match": "(?i)\\b(with)\\b"
				},{
					"match": "(?i)\\b(start[ ]+delay[ ]+)([\\d]+)\\b",
					"captures": {
						"1": { "name": "keyword.control.setdaemon.monit" },
						"2": { "name": "constant.numeric.monit" }
					}
				},{
					"include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+terminal[ ]+batch)\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.setterminal.monit" }
				},
				"patterns": [{ "include": "#comments" }]
			},{
				"begin": "(?i)\\b(set[ ]+init)\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.setinit.monit" }
				},
				"patterns": [{ "include": "#comments" }]
			},{
				"begin": "(?i)\\b(set[ ]+onreboot[ ]+)(start|nostart|laststate)?\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.setonreboot.monit" },
					"2": { "name": "constant.language.monit" }
				},
				"patterns": [{ "include": "#comments" }]
			},{
				"begin": "(?i)\\b(set[ ]+expectbuffer[ ]+)([\\d]+)\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.setexpectbuffer.monit" },
					"2": { "name": "constant.numeric.monit" }
				},
				"patterns": [{
					"include": "#units"
				},{
					"include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+limits)\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.setlimit.monit" }
				},
				"patterns": [{
					"name": "keyword.control.setlimit.monit",
					"begin": "\\{",
					"end": "\\}",
					"patterns": [{
						"include": "#limits"
					},{
						"include": "#timeouts"
					},{
						"include": "#comments"
					}]
				},{
					"patterns": [{ "include": "#comments" }]
				}]
			},{
				"begin": "(?i)\\b(set[ ]+fips)\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.setfips.monit" }
				},
				"patterns": [{ "include": "#comments" }]
			},{
				"begin": "(?i)\\b(set[ ]+(logfile|log)[ ]+syslog)\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.setlogfile.monit" },
					"2": { "name": "keyword.control.setlogfile.monit" },
					"3": { "name": "keyword.control.setlogfile.monit" }
				},
				"patterns": [{
					"name": "keyword.control.setlogfile.monit",
					"match": "(?i)\\b(with)\\b"
				},{
					"match": "(?i)\\b(facility[ ]+)(log_local[0-7]|log_daemon|log_user)\\b",
					"captures": {
						"1": { "name": "keyword.control.setlogfile.monit" },
						"2": { "name": "constant.numeric.monit" }
					}
				 },{ 
					"include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+(logfile|log))\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.setlogfile.monit" },
					"2": { "name": "keyword.control.setlogfile.monit" }
				},
				"patterns": [{
					"include": "#paths"
				},{
					"include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+eventqueue)\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.seteventqueue.monit" }
				},
				"patterns": [{
					"match": "(?i)\\b(basedir)",
					"captures": {
						"1": { "name": "keyword.control.seteventqueue.monit" }
					}
				},{
					"match": "(?i)\\b((slots|slot)[ ]+[\\d]+)\\b",
					"captures": {
						"1": { "name": "keyword.control.seteventqueue.monit" },
						"2": { "name": "keyword.control.seteventqueue.monit" },
						"3": { "name": "constant.numeric.monit" }
					}
				},{
					"include": "#paths"
				},{ 
					"include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+idfile)\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.setidfile.monit" }
				},
				"patterns": [{
					"include": "#paths"
				},{
					"include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+statefile)\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.setstatefile.monit" }
				},
				"patterns": [{
					"include": "#paths"
				},{
					"include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+pidfile)\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.setpidfile.monit" }
				},
				"patterns": [{
					"include": "#paths"
				},{
					"include": "#comments"
				}]
			},{
				"name": "keyword.control.setmmonit.monit",
				"begin": "\\b(set[ ]+mmonit[ ]+http(s)?:\\/\\/\\w+)",
				"end": "\\b(?=(check|set))\\b",
				"patterns": [{
				},{
					"name": "keyword.control.setmmonit.monit",
					"match": "\\b(timeout[ ]+[\\d]+([ ]+(seconds|second|s))?)"
				},{
					"name": "keyword.control.setmmonit.monit",
					"match": "\\b((with[ ]+)?hostgroups[ ]+\\[([ ]+)?(\"[^\"]+\"|'[^']+'|[\\w]+)([ ]+)?\\])"
				},{
					"name": "keyword.control.setmmonit.monit",
					"match": "\\b(register([ ]+without)?[ ]+credentials)"
				},{
					"include": "#comments"
				}]
			},{
				"name": "keyword.control.setssl.monit",
				"begin": "\\b(set[ ]+(tls|ssl[ ]+enable|enable[ ]+ssl|ssl))",
				"end": "\\b(?=(check|set))\\b",
				"patterns": [{
					"name": "keyword.control.setssl.monit",
					"begin": "\\{",
					"end": "\\}",
					"patterns": [{
						"include": "#ssls"
					},{
						"include": "#comments"
					}]
				},{
					"patterns": [{ "include": "#comments" }]
				}]
			},{
				"begin": "(?i)\\b(set[ ]+mailserver[ ])\\b",
				"end": "(?i)\\b(?=(check|set))\\b",
				"captures": {
					"1": { "name": "keyword.control.setmailserver.monit" }
				},
				"patterns": [{
					"name": "keyword.control.setmailserver.monit",
					"match": "(?i)\\b(port[ ]+\\d+)\\b"
				},{
					"match": "(?i)\\b((with[ ]+)?timeout[ ]+\\d+([ ]+(seconds|second|s)?))\\b",
					"captures": {
						"1": { "name": "keyword.control.setmailserver1.monit" },
						"2": { "name": "keyword.control.setmailserver2.monit" },
						"3": { "name": "constant.numeric.monit" },
						"4": { "name": "constant.language.monit" }
					}
				},{
					"match": "(?i)\\b((using[ ]+)?hostname[ ]+)\\b",
					"captures": {
						"1": { "name": "keyword.control.setmailserver1.monit" },
						"2": { "name": "keyword.control.setmailserver2.monit" }
					}
				},{
					"include": "#mailservers"
				},{
					"include": "#comments"
				}]
			},{
				"name": "keyword.control.setmailformat.monit",
				"begin": "\\b(set[ ]+mailformat)",
				"end": "\\b(?=(check|set))\\b",
				"patterns": [{
					"name": "keyword.control.setmailformat.monit",
					"begin": "\\{",
					"end": "\\}",
					"patterns": [{
						"include": "#mailformats"
					},{
						"include": "#comments"
					}]
				},{
					"patterns": [{ "include": "#comments" }]
				}]
			},{
				"name": "keyword.control.sethttpd.monit",
				"begin": "\\b(set[ ]+httpd[ ]+.+)",
				"end": "\\b(?=(check|set))\\b",
				"patterns": [{
					"include": "#httpds"
				},{
					"include": "#comments"
				}]
			}]
		},
		"startdelay": {
			"patterns": [{
				"match": "(?i)\\b(start[ ]+delay[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.setdaemon.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{ 
				"include": "#comments"
			}]
		},
		"limits": {
			"patterns": [{
				"match": "(?i)\\b(sendexpectbuffer[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.setlimit.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(filecontentbuffer[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.setlimit.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(httpcontentbuffer[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.setlimit.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(programoutput[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.setlimit.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"include": "#bytes"
			},{
				"include": "#comments"
			}]
		},
		"timeouts": {
			"patterns": [{
				"match": "(?i)\\b(networktimeout[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.setlimit.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(programtimeout[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.setlimit.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(stoptimeout[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.setlimit.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(starttimeout[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.setlimit.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(restarttimeout[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.setlimit.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(exectimeout[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.setlimit.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"include": "#seconds"
			},{
				"include": "#comments"
			}]
		},
		"mmonits": {
			"patterns": [{
				"name": "constant.character.monit",
				"match": "[\\w\\d]+:\\/\\/.+"
			},{
				"include": "#mmonitopt"
			}]
		},
		"mmonitopt": {
			"patterns": [{
				"name": "keyword.control.mmonit.monit",
				"match": "(?i)\\b(timeout[ ]+[\\d]+)\\b"
			},{
				"include": "#seconds"
			}]
		},
		"credentials": {
			"patterns": [{
				"name": "keyword.control.ssl.monit",
				"match": "(?i)\\b(register[ ]+credentials)\\b"
			}]
		},
		"ssls": {
			"patterns": [{
				"name": "keyword.control.ssl.monit",
				"begin": "(?i)\\b(tls|ssl[ ]+enable|enable[ ]+ssl|ssl)([ ]+\\{)\\b",
				"end": "\\b(\\}\\b)",
				"patterns": [{
					"include": "#sslopt"
				}]
			}]
		},
		"sslopt": {
		},
		"mailservers": {
			"patterns": [{
				"match": "(?i)\\b([^ ]+)(([ ]+port[ ]+)(\\d+))?\\b",
				"captures": {
					"1": { "name": "constant.string.monit" },
					"3": { "name": "keyword.control.mailserver.monit" },
					"4": { "name": "constant.numeric.monit" }
				}
			},{
				"include": "mailserveropt"
			}]
		},
		"mailserveropt": {
			"patterns": [{
				"match": "(?i)\\b(username[ ]+)([^ ]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.mailserver.monit" },
					"2": { "name": "constant.string.monit" }
				}
			},{
				"match": "(?i)\\b(password[ ]+)([^ ]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.mailserver.monit" },
					"2": { "name": "constant.string.monit" }
				}
			},{
				"include": "#ssls"
			}]
		},
		"checks": {
			"comment": "Monit check keywords",
			"patterns": [{
				"name": "keyword.control.process.monit",
				"begin": "\\b(check[ ]+process)\\b",
				"end": "\\b(?=(check|set))\\b",
				"patterns": [{
					"name": "keyword.control.process.monit",
					"match": "\\b(pidfile[ ]+(\"\\/[^\"]*\"|'\\/[^']*'|\\/[\\w]+))\\b"
				},{
					"name": "keyword.control.process.monit",
					"match": "\\b(path[ ]+(\"\\/[^\"]*\"|'\\/[^']*'|\\/[\\w]+))\\b"
				},{
					"name": "keyword.control.process.monit",
					"match": "\\b(matching[ ]+(.+))\\b"
				},{
					"include": "#optproc"
				},{
					"include": "#noises"
				},{
					"include": "#commants"
				}]
			},{
				"name": "keyword.control.file.monit",
				"begin": "\\b(check[ ]+file)\\b",
				"end": "\\b(?=(check|set))\\b",
				"patterns": [{
					"name": "keyword.control.file.monit",
					"match": "\\b(path[ ]+(\"\\/[^\"]*\"|'\\/[^']*'|\\/[\\w]+))\\b"
				},{
					"include": "#optfile"
				},{
					"include": "#noises"
				},{
					"include": "#commants"
				}]
			},{
				"name": "keyword.control.filesystem.monit",
				"begin": "\\b(check[ ]+filesystem)\\b",
				"end": "\\b(?=(check|set))\\b",
				"patterns": [{
					"name": "keyword.control.filesystem.monit",
					"match": "\\b(path[ ]+(\"\\/[^\"]*\"|'\\/[^']*'|\\/[\\w]+))\\b"
				},{
					"include": "#optfilesys"
				},{
					"include": "#noises"
				},{
					"include": "#commants"
				}]
			},{
				"name": "keyword.control.directory.monit",
				"begin": "\\b(check[ ]+directory)\\b",
				"end": "\\b(?=(check|set))\\b",
				"patterns": [{
					"name": "keyword.control.directory.monit",
					"match": "\\b(path[ ]+(.+))\\b"
				},{
					"include": "#optdir"
				},{
					"include": "#noises"
				},{
					"include": "#commants"
				}]
			},{
				"name": "keyword.control.host.monit",
				"begin": "\\b(check[ ]+host)\\b",
				"end": "\\b(?=(check|set))\\b",
				"patterns": [{
					"name": "keyword.control.host.monit",
					"match": "\\b(address[ ]+(.+))\\b"
				},{
					"include": "#opthost"
				},{
					"include": "#noises"
				},{
					"include": "#commants"
				}]
			},{
				"name": "keyword.control.network.monit",
				"begin": "\\b(check[ ]+network)\\b",
				"end": "\\b(?=(check|set))\\b",
				"patterns": [{
					"name": "keyword.control.network.monit",
					"match": "\\b(address[ ]+(.+))\\b"
				},{
					"name": "keyword.control.network.monit",
					"match": "\\b(interface[ ]+(.+))\\b"
				},{
					"include": "#optnet"
				},{
					"include": "#noises"
				},{
					"include": "#commants"
				}]
			},{
				"name": "keyword.control.system.monit",
				"begin": "\\b(check[ ]+system)\\b",
				"end": "\\b(?=(check|set))\\b",
				"patterns": [{
					"include": "#optsystem"
				},{
					"include": "#noises"
				},{
					"include": "#commants"
				}]
			},{
				"name": "keyword.control.fifo.monit",
				"begin": "\\b(check[ ]+fifo)\\b",
				"end": "\\b(?=(check|set))\\b",
				"patterns": [{
					"name": "keyword.control.fifo.monit",
					"match": "\\b(path[ ]+(.+))\\b"
				},{
					"include": "#optfifo"
				},{
					"include": "#noises"
				},{
					"include": "#commants"
				}]
			},{
				"name": "keyword.control.program.monit",
				"begin": "\\b(check[ ]+program)\\b",
				"end": "\\b(?=(check|set))\\b",
				"patterns": [{
					"name": "keyword.control.program.monit",
					"match": "\\b(path[ ]+(.+))\\b"
				},{
					"include": "#optprogram"
				},{
					"include": "#noises"
				},{
					"include": "#commants"
				}]
			}]
		},
		"optproc": {
			"comment": "Monit check process",
			"patterns": [{ "include": "#comments" }]
		},
		"optfile": {
			"comment": "Monit check file",
			"patterns": [{ "include": "#comments" }]
		},
		"optfilesys": {
			"comment": "Monit check filesystem",
			"patterns": [{ "include": "#comments" }]
		},
		"optdir": {
			"comment": "Monit check directory",
			"patterns": [{ "include": "#comments" }]
		},
		"opthost": {
			"comment": "Monit check host",
			"patterns": [{ "include": "#comments" }]
		},
		"optsystem": {
			"comment": "Monit check system",
			"patterns": [{ "include": "#comments" },
				{ "include": "#constants" }]
		},
		"optfifo": {
			"comment": "Monit check fifo",
			"patterns": [{ "include": "#comments" }]
		},
		"optprogram": {
			"comment": "Monit check program",
			"patterns": [{ "include": "#comments" }]
		},
		"optnet": {
			"comment": "Monit check network",
			"patterns": [{ "include": "#comments" }]
		},
		"start": {
			"comment": "Monit start command",
			"name": "keyword.control.start.monit",
			"begin": "\\b(start[ ]+(program?[ ]+)?([=][ ]+)?\")",
			"end": "\"",
			"patterns": [{ "include": "source.shell" }]
		},
		"stop": {
			"comment": "Monit stop command",
			"name": "keyword.control.stop.monit",
			"begin": "\\b(stop[ ]+(program[ ]+)?([=][ ]+)?\")",
			"end": "\"",
			"patterns": [{ "include": "source.shell" }]
		},
		"restart": {
			"comment": "Monit restart command",
			"name": "keyword.control.restart.monit",
			"begin": "\\b(restart[ ]+(program[ ]+)?([=][ ]+)?\")",
			"end": "\"",
			"patterns": [{ "include": "source.shell" }]
		},
		"exec": {
			"comment": "Monit exec command",
			"name": "keyword.control.exec.monit",
			"begin": "\\b(exec(ute)?[ ]+\")",
			"end": "\"",
			"patterns": [{ "include": "source.shell" }]
		},
		"pathtok": {
			"comment": "Monit path command",
			"name": "keyword.control.path.monit",
			"begin": "\\b(path[ ]+\")",
			"end": "\"",
			"patterns": [{ "include": "source.shell" }]
		},
		"arguments": {
			"comment": "Monit arguments",
			"patterns": [{ 
				"include": "#strings"
			},{
				"include": "#paths"
			}]
		},
		"useropt": {
			"comment": "Monit users",
			"patterns": [{
				"name": "keyword.control.uid.monit",
				"match": "\\b(uid)\\b"
			},{
				"name": "keyword.control.gid.monit",
				"match": "\\b(gid)\\b"
			},{
				"include": "#strings"
			},{
				"include": "#numbers"
			}]
		},
		"username": {
			"comment": "Monit usersname",
			"patterns": [{
				"name": "keyword.control.username.monit",
				"match": "\\b(username)\\b"
			},{
				"include": "#strings"
			}]
		},
		"password": {
			"comment": "Monit password",
			"patterns": [{
				"name": "keyword.control.password.monit",
				"match": "\\b(password)\\b"
			},{
				"include": "#strings"
			}]
		},
		"database": {
			"comment": "Monit database",
			"patterns": [{
				"name": "keyword.control.database.monit",
				"match": "\\b(database)\\b"
			},{
				"include": "#strings"
			}]
		},
		"hostname": {
			"comment": "Monit hostname",
			"patterns": [{
				"name": "keyword.control.hostname.monit",
				"match": "\\b(hostname)\\b"
			},{
				"include": "#strings"
			}]
		},
		"connection": {
			"comment": "Monit connection",
			"patterns": [{
				"name": "keyword.control.connection.monit",
				"begin": "\\b(if[ ]+failed)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.connection.monit",
				"begin": "\\b(if[ ]+succeeded)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"icmp": {
			"comment": "Monit icmp",
			"patterns": [{
				"name": "keyword.control.icmp.monit",
				"begin": "\\b(if[ ]+failed[ ]+icmp)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.icmp.monit",
				"begin": "\\b(if[ ]+succeeded[ ]+icmp)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.icmp.monit",
				"begin": "\\b(if[ ]+failed[ ]+ping(4|6)?)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.icmp.monit",
				"begin": "\\b(if[ ]+succeeded[ ]+ping(4|6)?)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"exist": {
			"comment": "Monit exist",
			"patterns": [{
				"name": "keyword.control.exist.monit",
				"begin": "\\b(if[ ]+not[ ]+exist)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.exist.monit",
				"begin": "\\b(if[ ]+exist)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"pid": {
			"comment": "Monit pid",
			"patterns": [{
				"name": "keyword.control.pid.monit",
				"begin": "\\b(if[ ]+changed[ ]+pid)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"ppid": {
			"comment": "Monit ppid",
			"patterns": [{
				"name": "keyword.control.ppid.monit",
				"begin": "\\b(if[ ]+changed[ ]+ppid)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"uptime": {
			"comment": "Monit uptime",
			"patterns": [{
				"name": "keyword.control.uptime.monit",
				"begin": "\\b(if[ ]+uptime)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"actionrate": {
			"comment": "Monit actionrate",
			"patterns": [{
				"name": "keyword.control.actionrate.monit",
				"begin": "\\b(if[ ]+\\d+[ ]+restart(s)?)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"statusvalue": {
			"comment": "Monit statusvalue",
			"patterns": [{
				"name": "keyword.control.statusvalue.monit",
				"begin": "\\b(if[ ]+status)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.statusvalue.monit",
				"begin": "\\b(if[ ]+changed[ ]+status)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"resourceprocess": {
			"comment": "Monit resourceprocess",
			"patterns": [{
				"name": "keyword.control.resourceprocess.monit",
				"begin": "\\b(if[ ]+cpu)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourceprocess.monit",
				"begin": "\\b(if[ ]+totalcpu)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourceprocess.monit",
				"begin": "\\b(if[ ]+memory)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourceprocess.monit",
				"begin": "\\b(if[ ]+totalmemory)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourceprocess.monit",
				"begin": "\\b(if[ ]+threads)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourceprocess.monit",
				"begin": "\\b(if[ ]+children)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourceprocess.monit",
				"begin": "\\b(if[ ]+loadavg)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourceprocess.monit",
				"begin": "\\b(if[ ]+read)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourceprocess.monit",
				"begin": "\\b(if[ ]+disk[ ]+read)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourceprocess.monit",
				"begin": "\\b(if[ ]+write)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourceprocess.monit",
				"begin": "\\b(if[ ]+disk[ ]+write)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"resourcesystem": {
			"comment": "Monit resourcesystem",
			"patterns": [{
				"name": "keyword.control.resourcesystem.monit",
				"begin": "\\b(if[ ]+loadavg)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourcesystem.monit",
				"begin": "\\b(if[ ]+memory)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourcesystem.monit",
				"begin": "\\b(if[ ]+swap)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourcesystem.monit",
				"begin": "\\b(if[ ]+cpuuser)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourcesystem.monit",
				"begin": "\\b(if[ ]+cpusystem)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourcesystem.monit",
				"begin": "\\b(if[ ]+cpuwait)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourcesystem.monit",
				"begin": "\\b(if[ ]+cpunice)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourcesystem.monit",
				"begin": "\\b(if[ ]+cpuhardirq)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourcesystem.monit",
				"begin": "\\b(if[ ]+cpusoftirq)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourcesystem.monit",
				"begin": "\\b(if[ ]+cpusteal)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourcesystem.monit",
				"begin": "\\b(if[ ]+cpuguest)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourcesystem.monit",
				"begin": "\\b(if[ ]+cpuguestnice)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.resourcesystem.monit",
				"begin": "\\b(if[ ]+cpu)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"timestamp": {
			"comment": "Monit timestamp",
			"patterns": [{
				"name": "keyword.control.timestamp.monit",
				"begin": "\\b(if[ ]+(a|c|m)?time)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.timestamp.monit",
				"begin": "\\b(if[ ]+changed[ ]+(a|c|m)?time)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"checksum": {
			"comment": "Monit checksum",
			"patterns": [{
				"name": "keyword.control.checksum.monit",
				"begin": "\\b(if[ ]+failed)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.checksum.monit",
				"begin": "\\b(if[ ]+changed[ ]+)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"inode": {
			"comment": "Monit inode",
			"patterns": [{
				"name": "keyword.control.inode.monit",
				"begin": "\\b(if[ ]+inode)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"space": {
			"comment": "Monit space",
			"patterns": [{
				"name": "keyword.control.space.monit",
				"begin": "\\b(if[ ]+space)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"read": {
			"comment": "Monit read",
			"patterns": [{
				"name": "keyword.control.read.monit",
				"begin": "\\b(if[ ]+read)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"write": {
			"comment": "Monit write",
			"patterns": [{
				"name": "keyword.control.write.monit",
				"begin": "\\b(if[ ]+write)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"servicetime": {
			"comment": "Monit servicetime",
			"patterns": [{
				"name": "keyword.control.servicetime.monit",
				"begin": "\\b(if[ ]+servicetime)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"fsflag": {
			"comment": "Monit fsflag",
			"patterns": [{
				"name": "keyword.control.fsflag.monit",
				"begin": "\\b(if[ ]+fsflag)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.fsflag.monit",
				"begin": "\\b(if[ ]+changed[ ]+fsflag)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"permission": {
			"patterns": [{
				"name": "keyword.control.fsflag.monit",
				"begin": "\\b(if[ ]+failed)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.fsflag.monit",
				"begin": "\\b(if[ ]+changed[ ]+)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"programmatch": {
			"patterns": [{
				"name": "keyword.control.programmatch.monit",
				"begin": "\\b(if[ ]+content)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.programmatch.monit",
				"begin": "\\b(ignore[ ]+content)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"match": {
			"patterns": [{
				"name": "keyword.control.match.monit",
				"begin": "\\b(if[ ]+content)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.match.monit",
				"begin": "\\b(ignore[ ]+content)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.match.monit",
				"begin": "\\b(if[ ]+(not[ ])?+match)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.match.monit",
				"begin": "\\b(ignore[ ]+(not[ ])?+match)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"size": {
			"patterns": [{
				"name": "keyword.control.size.monit",
				"begin": "\\b(if[ ]+size)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.size.monit",
				"begin": "\\b(if[ ]+changed[ ]+size)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"hardlink": {
			"patterns": [{
				"name": "keyword.control.hardlink.monit",
				"begin": "\\b(if[ ]+hardlink)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.hardlink.monit",
				"begin": "\\b(if[ ]+changed[ ]+hardlink)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"uid": {
			"patterns": [{
				"name": "keyword.control.uid.monit",
				"begin": "\\b(if[ ]+uid)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.uid.monit",
				"begin": "\\b(if[ ]+changed[ ]+uid)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"euid": {
			"patterns": [{
				"name": "keyword.control.euid.monit",
				"begin": "\\b(if[ ]+euid)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.euid.monit",
				"begin": "\\b(if[ ]+changed[ ]+euid)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"secattr": {
			"patterns": [{
				"name": "keyword.control.secattr.monit",
				"begin": "\\b(if[ ]+failed)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"filedescriptorssystem": {
			"patterns": [{
				"name": "keyword.control.filedescriptorssystem.monit",
				"begin": "\\b(if[ ]+)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"filedescriptorsprocess": {
			"patterns": [{
				"name": "keyword.control.filedescriptorsprocess.monit",
				"begin": "\\b(if[ ]+)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"filedescriptorsprocesstotal": {
			"patterns": [{
				"name": "keyword.control.filedescriptorsprocesstotal",
				"begin": "\\b(if[ ]+)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"gid": {
			"patterns": [{
				"name": "keyword.control.gid.monit",
				"begin": "\\b(if[ ]+gid)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.gid.monit",
				"begin": "\\b(if[ ]+failed[ ]+gid)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"linkstatus": {
			"patterns": [{
				"name": "keyword.control.linkstatus.monit",
				"begin": "\\b(if[ ]+failed[ ]+link)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.linkstatus.monit",
				"begin": "\\b(if[ ]+link[ ]+down)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.linkstatus.monit",
				"begin": "\\b(if[ ]+link[ ]+up)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"linkspeed": {
			"patterns": [{
				"name": "keyword.control.linkstatus.monit",
				"begin": "\\b(if[ ]+changed[ ]+link)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"linksaturation": {
			"patterns": [{
				"name": "keyword.control.linksaturation.monit",
				"begin": "\\b(if[ ]+saturation)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"upload": {
			"patterns": [{
				"name": "keyword.control.upload.monit",
				"begin": "\\b(if[ ]+upload)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.upload.monit",
				"begin": "\\b(if[ ]+total[ ]+upload)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"download": {
			"patterns": [{
				"name": "keyword.control.download.monit",
				"begin": "\\b(if[ ]+download)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.download.monit",
				"begin": "\\b(if[ ]+total[ ]+download)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#actions"
			},{
				"include": "#comments"
			}]
		},
		"actions": {
			"comment": "Monit action",
			"patterns": [{
				"name": "keyword.control.action.monit",
				"begin": "\\b(then[ ]+alert)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.action.monit",
				"begin": "\\b(then[ ]+exec)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.action.monit",
				"begin": "\\b(then[ ]+ignore)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.action.monit",
				"begin": "\\b(then[ ]+restart)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.action.monit",
				"begin": "\\b(then[ ]+start)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.action.monit",
				"begin": "\\b(then[ ]+stop)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.action.monit",
				"begin": "\\b(then[ ]+unmonitor)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"name": "keyword.control.action.monit",
				"begin": "\\b(then[ ]+monitor)\\b",
				"end": "\\b(?=(check|set|if))\\b",
				"patterns": [{
				}]
			},{
				"include": "#comments"
			}]
		},
		"strings": {
			"comment": "Monit strings",
			"patterns": [{
				"name": "string.quoted.double.monit",
				"match": "\"[^\"]*\""
			},{
				"name": "string.quoted.single.monit",
				"match": "'[^']*'"
			},{
				"name": "string.unquoted.monit",
				"match": ".+"
			}]
		},
		"paths": {
			"comment": "Monit path",
			"patterns": [{
				"name": "string.quoted.double.monit",
				"match": "\"[/][^\"]*\""
			},{
				"name": "string.quoted.single.monit",
				"match": "'[/][^']*'"
			},{
				"name": "string.unquoted.monit",
				"match": "[/].+"
			}]
		},
		"brackets": {
			"comment": "Monit brackets",
			"patterns": [{
				"name": "string.interpolated.monit",
				"begin": "{",
				"end": "}",
				"patterns": [{ "include": "#expressions" }]
			},{
				"name": "string.interpolated.monit",
				"begin": "\\[",
				"end": "]",
				"patterns": [{ "include": "#expressions" }]
			},{
				"name": "string.interpolated.monit",
				"begin": "\\(",
				"end": "\\)",
				"patterns": [{ "include": "#expressions" }]
			}]
		},
		"comparisons": {
			"comment": "Monit comparisons",
			"patterns": [{
				"name": "keyword.operator.greater.monit",
				"match": "\\b(more|greater|gt|>|older)\\b"
			},{
				"name": "keyword.operator.greaterorequal.monit",
				"match": "\\b(ge|>=)\\b"
			},{
				"name": "keyword.operator.less.monit",
				"match": "\\b(less|lt|<|newer)\\b"
			},{
				"name": "keyword.operator.lessorequal.monit",
				"match": "\\b(le|<=)\\b"
			},{
				"name": "keyword.operator.equal.monit",
				"match": "\\b(equal|eq|==|=)\\b"
			},{
				"name": "keyword.operator.notequal.monit",
				"match": "\\b(notequal|ne|!=)\\b"
			}]
		},
		"loads": {
			"comment": "Monit loads",
			"patterns": [{
				"name": "keyword.operator.loadavg1.monit",
				"match": "\\b(load(avg)[ ]*(\\([ ]*1[ ]*(m|min)?[ ]*\\))?)\\b"
			},{
				"name": "keyword.operator.loadavg5.monit",
				"match": "\\b(load(avg)[ ]*(\\([ ]*5[ ]*(m|min)?[ ]*\\))?)\\b"
			},{
				"name": "keyword.operator.loadavg15.monit",
				"match": "\\b(load(avg)[ ]*(\\([ ]*15[ ]*(m|min)?[ ]*\\))?)\\b"
			}]
		},
		"cpuusages": {
			"comment": "Monit cpu usages",
			"patterns": [{
				"name": "keyword.operator.cpuuser.monit",
				"match": "\\b(cpu[ ]*(usage)*[ ]*\\([ ]*(us|usr|user)?[ ]*\\))\\b"
			},{
				"name": "keyword.operator.cpusyst.monit",
				"match": "\\b(cpu[ ]*(usage)*[ ]*\\([ ]*(sy|sys|system)?[ ]*\\))\\b"
			},{
				"name": "keyword.operator.cpuwait.monit",
				"match": "\\b(cpu[ ]*(usage)*[ ]*\\([ ]*(wa|wait)?[ ]*\\))\\b"
			},{
				"name": "keyword.operator.cpunice.monit",
				"match": "\\b(cpu[ ]*(usage)*[ ]*\\([ ]*nice[ ]*\\))\\b"
			},{
				"name": "keyword.operator.cpuhardirq.monit",
				"match": "\\b(cpu[ ]*(usage)*[ ]*\\([ ]*hardirq[ ]*\\))\\b"
			},{
				"name": "keyword.operator.cpusoftirq.monit",
				"match": "\\b(cpu[ ]*(usage)*[ ]*\\([ ]*softirq[ ]*\\))\\b"
			},{
				"name": "keyword.operator.cpusteal.monit",
				"match": "\\b(cpu[ ]*(usage)*[ ]*\\([ ]*steal[ ]*\\))\\b"
			},{
				"name": "keyword.operator.cpuguest.monit",
				"match": "\\b(cpu[ ]*(usage)*[ ]*\\([ ]*guest[ ]*\\))\\b"
			},{
				"name": "keyword.operator.cpuguestnice.monit",
				"match": "\\b(cpu[ ]*(usage)*[ ]*\\([ ]*guestnice[ ]*\\))\\b"
			}]
		},
		"programs": {
			"comment": "Monit commands",
			"patterns": [{
				"name": "keyword.operator.command.monit",
				"begin": "\\b(start[ ]+(program)?[ ]+([=][ ]+)?[\"])",
				"end": "\"",
				"patterns": [{ "include": "source.shell" }]
			},{
				"name": "keyword.operator.command.monit",
				"begin": "\\b(stop[ ]+(program)?[ ]+([=][ ]+)?[\"])",
				"end": "\"",
				"patterns": [{ "include": "source.shell" }]
			},{
				"name": "keyword.operator.command.monit",
				"begin": "\\b(restart[ ]+(program)?[ ]+([=][ ]+)?[\"])",
				"end": "\"",
				"patterns": [{ "include": "source.shell" }]
			},{
				"name": "keyword.operator.command.monit",
				"begin": "\\b(exec(ute)?[ ]+[\"])",
				"end": "\"",
				"patterns": [{ "include": "source.shell" }]
			},{
				"name": "keyword.operator.command.monit",
				"begin": "\\b(path[ ]+[\"])",
				"end": "\"",
				"patterns": [{ "include": "source.shell" }]
			}]
		},
		"units": {
			"comment": "Monit units",
			"patterns": [{
				"name": "keyword.operator.percent.monit",
				"match": "\\b(percent|%)\\b"
			},{
				"name": "keyword.operator.byte.monit",
				"match": "\\b(bytes|byte|b)(/s)?)\\b"
			},{
				"name": "keyword.operator.kilobyte.monit",
				"match": "\\b(kilobytes|kilobyte|kb)(/s)?)\\b"
			},{
				"name": "keyword.operator.megabyte.monit",
				"match": "\\b(megabytes|megabyte|mb)(/s)?)\\b"
			},{
				"name": "keyword.operator.gigabyte.monit",
				"match": "\\b(gigabytes|gigabyte|gb)(/s)?)\\b"
			},{
				"name": "keyword.operator.millisecond.monit",
				"match": "\\b(milliseconds|millisecond|ms)\\b"
			},{
				"name": "keyword.operator.second.monit",
				"match": "\\b(seconds|second|s)\\b"
			},{
				"name": "keyword.operator.minute.monit",
				"match": "\\b(minutes|minute|m)\\b"
			},{
				"name": "keyword.operator.hour.monit",
				"match": "\\b(hours|hour|h)\\b"
			},{
				"name": "keyword.operator.day.monit",
				"match": "\\b(days|day)\\b"
			},{
				"name": "keyword.operator.month.monit",
				"match": "\\b(months|month)\\b"
			}]
		},
		"seconds": {
			"comment": "Monit seconds",
			"patterns": [{
				"name": "constant.language.monit",
				"match": "(?i)\\b(milliseconds|millisecond|ms)\\b"
			},{
				"name": "constant.language.monit",
				"match": "(?i)\\b(seconds|second|s)\\b"
			}]
		},
		"bytes": {
			"comment": "Monit bytes",
			"patterns": [{
				"name": "constant.language.monit",
				"match": "(?i)\\b((bytes|byte|b)(/s)?)\\b"
			},{
				"name": "constant.language.monit",
				"match": "(?i)\\b((kilobytes|kilobyte|kb)(/s)?)\\b"
			},{
				"name": "constant.language.monit",
				"match": "(?i)\\b((megabytes|megabyte|mb)(/s)?)\\b"
			},{
				"name": "constant.language.monit",
				"match": "(?i)\\b((gigabytes|gigabyte|gb)(/s)?)\\b"
			}]
		},
		"timestamps": {
			"comment": "Monit timestamps",
			"patterns": [{
				"name": "keyword.operator.atime.monit",
				"match": "\\b(atime|access time(stamp)?)\\b"
			},{
				"name": "keyword.operator.ctime.monit",
				"match": "\\b(ctime|change time(stamp)?)\\b"
			},{
				"name": "keyword.operator.mtime.monit",
				"match": "\\b(mtime|modification time(stamp)?|modify time(stamp)?)\\b"
			}]
		},
		"values": {
			"comment": "Monit values",
			"patterns": [{
					"name": "constant.numeric.float.monit",
					"match": "\\b([+-]?\\d+\\.\\d+)\\b"
			},{
					"name": "constant.numeric.float.monit",
					"match": "\\b([+-]?\\d+\\.\\d+([eE][+-]?\\d+)?)\\b"
			},{
					"name": "constant.numeric.integer.monit",
					"match": "\\b([+-]?\\d+)\\b"
			}]
		},
		"commands": {
			"comment": "Monit shell commands",
			"patterns": [{
				"name": "string.quoted.other.monit",
				"begin": "\"",
				"end": "\"",
				"patterns": [{ "include": "source.shell" }]
			},{
				"name": "string.quoted.other.monit",
				"begin": "'",
				"end": "'",
				"patterns": [{ "include": "source.shell" }]
			},{
				"include": "source.shell"
			}]
		},
		"functions": {
			"comment": "Monit functions",
			"name": "support.function.monit",
			"begin": "[\\w\\d_]*\\(",
			"end": "\\)",
			"patterns": [{ "include": "#expressions" }]
		},
		"constants": {
			"comment": "Monit constant keywords",
			"patterns": [{
				"name": "constant.language.monit",
				"match": "\\b(\\$EVENT|\\$SERVICE|\\$DATE|\\$HOST|\\$ACTION|\\$DESCRIPTION|\\$SYSTEM)\\b"
			}]
		},
		"eventoptions": {
			"comment": "Monit event options",
			"patterns": [{
				"name": "keyword.control.event.monit",
				"match": "\\b(action)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(bytein)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(byteout)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(checksum)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(connection)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(content)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(data)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(exec)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(exist)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(fsflag)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(gid)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(icmp)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(instance)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(invalid)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(link)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(nonexist)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(packetin)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(packetout)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(permission)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(pid)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(ppid)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(resource)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(saturation)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(size)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(speed)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(status)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(timeout)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(timestamp)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(uid)[,]?"
			},{
				"name": "keyword.control.event.monit",
				"match": "\\b(uptime)[,]?"
			}]
		},
		"noises": {
			"comment": "Monit noise keywords",
			"patterns": [{
				"name": "keyword.other.monit",
				"match": "(?i)\\b(is|as|are|for|via|on(ly)?|with(in|out)?|program(s)?|and|has|using|use|the|to|sum|than|usage|was|times|but|of|or|does|per|in|last|rate)\\b"
			}]
		},
		"comments": {
			"comment": "Monit comments",
			"patterns": [{
				"name": "comment.line.monit",
				"begin": "#",
				"end": "$"
			}]
		},
		"includes": {
			"comment": "Monit include keywords",
			"begin": "(?i)\\b(include)\\b",
			"end": "(?i)\\b(?=(check|set|include))\\b",
			"captures": {
				"1": { "name": "keyword.control.include.monit" }
			},
			"patterns": [{
				"include": "#paths"
			},{
				"include": "#comments"
			}]
		}
	},
	"scopeName": "source.monit"
}