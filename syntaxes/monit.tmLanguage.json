{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "monit",
	"patterns": [{ "include": "#comments" },
		{ "include": "#sets" },
		{ "include": "#checks" },
		{ "include": "#includes"
	}],
	"repository": {
		"expressions": {
			"patterns": [{ "include": "#comments" },
				{ "include": "#noises" },
				{ "include": "#constants"
			}]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.monit",
				"match": "\\b(if|while|for|return)\\b"
			}]
		},
		"sets": {
			"comment": "Monit settings",
			"patterns": [{
				"begin": "(?i)\\b(set[ ]+alert[ ]+)([\\w\\-_.]+(@[\\w\\-_.]*)?)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setalert.monit" },
					"2": { "name": "constant.character.monit" }
				},
				"patterns": [{
					"begin": "(?i)(not[ ]+)?(on[ ]+)?\\{",
					"end": "(\\})",
					"captures": {
						"0": { "name": "keyword.control.setalert.monit" }
					},
					"patterns": [{ "include": "#comments" },
						{ "include": "#eventoption"
					}]
				},{
					"match": "(?i)\\b((with[ ]+)?reminder([ ]+on)?)([ ]+[\\d]+)([ ]+cycle(s)?)?\\b",
					"captures": {
						"1": { "name": "keyword.control.setalert.monit" },
						"2": { "name": "keyword.control.setalert.monit" },
						"3": { "name": "keyword.control.setalert.monit" },
						"4": { "name": "constant.numeric.monit" },
						"5": { "name": "support.type.cycle.monit" }
					}
				},{ "include": "#comments" },
					{ "include": "#reminder"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+daemon[ ]+)([\\d]+)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setdaemon.monit" },
					"2": { "name": "constant.numeric.monit" }
				},
				"patterns": [{
					"name": "keyword.control.setdaemon.monit",
					"match": "(?i)\\b(with)\\b"
				},{
					"match": "(?i)\\b(start[ ]+delay[ ]+)([\\d]+)\\b",
					"captures": {
						"1": { "name": "keyword.control.setdaemon.monit" },
						"2": { "name": "constant.numeric.monit" }
					}
				},{ "include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+terminal[ ]+batch)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setterminal.monit" }
				},
				"patterns": [{ "include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+init)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setinit.monit" }
				},
				"patterns": [{ "include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+onreboot[ ]+)(start|nostart|laststate)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setonreboot.monit" },
					"2": { "name": "constant.language.monit" }
				},
				"patterns": [{ "include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+expectbuffer[ ]+)([\\d]+)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setexpectbuffer.monit" },
					"2": { "name": "constant.numeric.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#units"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+limits)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setlimit.monit" }
				},
				"patterns": [{
					"begin": "(\\{)",
					"end": "(\\})",
					"captures": {
						"1": { "name": "keyword.control.setlimit.monit" }
					},
					"patterns": [{ "include": "#comments" },
						{ "include": "#limitbuffer" },
						{ "include": "#limittimeout"
					}]
				},{ "include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+fips)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setfips.monit" }
				},
				"patterns": [{ "include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+(logfile|log)[ ]+syslog)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setlogfile.monit" }
				},
				"patterns": [{
					"name": "keyword.control.setlogfile.monit",
					"match": "(?i)\\b(with)\\b"
				},{
					"match": "(?i)\\b(facility[ ]+)(log_local[0-7]|log_daemon|log_user)\\b",
					"captures": {
						"1": { "name": "keyword.control.setlogfile.monit" },
						"2": { "name": "constant.language.monit" }
					}
				},{ "include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+(logfile|log))\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setlogfile.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#paths"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+eventqueue)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.seteventqueue.monit" }
				},
				"patterns": [{
					"match": "(?i)\\b(basedir)",
					"captures": {
						"1": { "name": "keyword.control.seteventqueue.monit" }
					}
				},{
					"match": "(?i)\\b((slots|slot)[ ]+)([\\d]+)\\b",
					"captures": {
						"1": { "name": "keyword.control.seteventqueue.monit" },
						"3": { "name": "constant.numeric.monit" }
					}
				},{ "include": "#comments" },
					{ "include": "#paths"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+idfile)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setidfile.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#paths"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+statefile)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setstatefile.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#paths"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+pidfile)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setpidfile.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#paths"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+mmonit)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setmmonit.monit" }
				},
				"patterns": [{
					"match": "(?i)\\b(http(s)?:\\/\\/(([\\w]+:)?([\\w]+)@)?[\\w\\-_.:\\/]+)",
					"captures": {
						"1": { "name": "constant.character.monit" }
					}
				},{
					"match": "(?i)\\b(timeout[ ]+)([\\d]+)([ ]+(seconds|second|s))?",
					"captures": {
						"1": { "name": "keyword.control.setmmonit.monit" },
						"2": { "name": "constant.numeric.monit" },
						"3": { "name": "support.type.second.monit" }
					}
				},{
					"begin": "(?i)\\b((with[ ]+)?(hostgroups[ ]+)?(\\[))",
					"end": "\\b(\\])\\b",
					"captures": {
						"1": { "name": "keyword.control.setmmonit.monit" }
					},
					"patterns": [{ "include": "#comments" },
						{ "include": "#strings"
					}]
				},{
					"name": "keyword.control.setmmonit.monit",
					"match": "(?i)\\b(register([ ]+without)?[ ]+credentials)"
				},{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#ssl" },
					{ "include": "#sslchecksum" },
					{ "include": "#sslversion" },
					{ "include": "#certmd5"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+(tls|ssl[ ]+enable|enable[ ]+ssl|ssl))\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setssl.monit" }
				},
				"patterns": [{
					"begin": "(\\{)",
					"end": "(\\})",
					"captures": {
						"1": { "name": "keyword.control.setssl.monit" }
					},
					"patterns": [{ "include": "#comments" },
						{ "include": "#ssloption"
					}]
				},{ "include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+mailserver)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setmailserver.monit" }
				},
				"patterns": [{
					"match": "(?i)\\b(port[ ]+)([\\d]+)\\b",
					"captures": {
						"1": { "name": "keyword.control.setmailserver.monit" },
						"2": { "name": "constant.numeric.monit" }
					}
				},{
					"match": "(?i)\\b((with[ ]+)?timeout[ ]+)([\\d]+)([ ]+(seconds|second|s))?\\b",
					"captures": {
						"1": { "name": "keyword.control.setmailserver.monit" },
						"3": { "name": "constant.numeric.monit" },
						"4": { "name": "support.type.second.monit" }
					}
				},{
					"match": "(?i)\\b((using[ ]+)?hostname)\\b",
					"captures": {
						"1": { "name": "keyword.control.setmailserver.monit" }
					}
				},{ "include": "#comments" },
					{ "include": "#username" },
					{ "include": "#password" },
					{ "include": "#ssl" },
					{ "include": "#sslchecksum" },
					{ "include": "#sslversion" },
					{ "include": "#certmd5" },
					{ "include": "#hosts" 
				}]
			},{
				"begin": "(?i)\\b(set[ ]+mail-format)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.setmailformat.monit" }
				},
				"patterns": [{
					"begin": "(\\{)",
					"end": "(\\})",
					"captures": {
						"1": { "name": "keyword.control.setmailformat.monit" }
					},
					"patterns": [{ "include": "#comments" },
						{ "include": "#constants" },
						{ "include": "#formatoption"
					}]
				},{ "include": "#comments" },
					{ "include": "#constants"
				}]
			},{
				"begin": "(?i)\\b(set[ ]+httpd)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.sethttpd.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#ssl" },
					{ "include": "#pemfile" },
					{ "include": "#clientpemfile" },
					{ "include": "#allowselfcert" },
					{ "include": "#signature" },
					{ "include": "#bindaddress" },
					{ "include": "#allow" },
					{ "include": "#httpdport" },
					{ "include": "#httpdsocket"
				}]
			}]
		},
		"checks": {
			"comment": "Monit checks",
			"patterns": [{
				"begin": "(?i)\\b(check[ ]+process[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.checkprocess.monit" },
					"2": { "name": "constant.character.monit" }
				},
				"patterns": [{
					"match": "(?i)((with[ ]+)?pidfile[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.checkprocess.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{
					"match": "(?i)((with[ ]+)?path[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
						"captures": {
							"1": { "name": "keyword.control.checkprocess.monit" },
							"2": { "name": "constant.character.monit" }
						}
				},{
					"match": "(?i)(match(ing)?[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.checkprocess.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{
					"match": "(?i)(match(ing)?[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
						"captures": {
							"1": { "name": "keyword.control.checkprocess.monit" },
							"2": { "name": "constant.other.monit" }
						}
				},{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#programs" },
					{ "include": "#exist" },
					{ "include": "#pid" },
					{ "include": "#ppid" },
					{ "include": "#uid" },
					{ "include": "#euid" },
					{ "include": "#secattr" },
					{ "include": "#filedescriptorsprocess" },
					{ "include": "#filedescriptorsprocesstotal" },
					{ "include": "#gid" },
					{ "include": "#uptime" },
					{ "include": "#connection" },
					{ "include": "#connectionurl" },
					{ "include": "#connectionunix" },
					{ "include": "#actionrate" },
					{ "include": "#alert" },
					{ "include": "#every" },
					{ "include": "#mode" },
					{ "include": "#onreboot" },
					{ "include": "#group" },
					{ "include": "#depend" },
					{ "include": "#resourceprocess" },
					{ "include": "#useroption"
				}]
			},{
				"begin": "(?i)\\b(check[ ]+file[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.checkfile.monit" },
					"2": { "name": "constant.character.monit" }
				},
				"patterns": [{
					"match": "(?i)\\b((with[ ]+)?path[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.checkfile.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#programs" },
                	{ "include": "#alert" },
                	{ "include": "#exist" },
                	{ "include": "#timestamp" },
                	{ "include": "#actionrate" },
                	{ "include": "#every" },
                	{ "include": "#alert" },
                	{ "include": "#permission" },
                	{ "include": "#uid" },
                	{ "include": "#gid" },
                	{ "include": "#checksum" },
                	{ "include": "#size" },
                	{ "include": "#hardlink" },
                	{ "include": "#match" },
                	{ "include": "#mode" },
                	{ "include": "#onreboot" },
                	{ "include": "#group" },
                	{ "include": "#depend"
				}]
			},{
				"begin": "(?i)\\b(check[ ]+filesystem[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.checkfilesystem.monit" },
					"2": { "name": "constant.character.monit" }
				},
				"patterns": [{
					"match": "(?i)\\b((with[ ]+)?path[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.checkfilesystem.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#programs" },
					{ "include": "#exist" },
					{ "include": "#actionrate" },
					{ "include": "#every" },
					{ "include": "#alert" },
					{ "include": "#permission" },
					{ "include": "#uid" },
					{ "include": "#gid" },
					{ "include": "#mode" },
					{ "include": "#onreboot" },
					{ "include": "#group" },
					{ "include": "#depend" },
					{ "include": "#inode" },
					{ "include": "#space" },
					{ "include": "#read" },
					{ "include": "#write" },
					{ "include": "#servicetime" },
					{ "include": "#fsflag"
				}]
			},{
				"begin": "(?i)\\b(check[ ]+directory[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.checkdirectory.monit" },
					"2": { "name": "constant.character.monit" }
				},
				"patterns": [{
					"match": "(?i)\\b((with[ ]+)?path[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.checkdirectory.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#programs" },
					{ "include": "#exist" },
                	{ "include": "#timestamp" },
                	{ "include": "#actionrate" },
                	{ "include": "#every" },
                	{ "include": "#alert" },
                	{ "include": "#permission" },
                	{ "include": "#uid" },
                	{ "include": "#gid" },
                	{ "include": "#hardlink" },
                	{ "include": "#mode" },
                	{ "include": "#onreboot" },
                	{ "include": "#group" },
                	{ "include": "#depend"
				}]
			},{
				"begin": "(?i)\\b(check[ ]+host[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.checkhost.monit" },
					"2": { "name": "constant.character.monit" }
				},
				"patterns": [{
					"match": "(?i)((with[ ]+)?address[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.checkhost.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#programs" },
                	{ "include": "#connection" },
                	{ "include": "#connectionurl" },
                	{ "include": "#connectionicmp" },
                	{ "include": "#actionrate" },
                	{ "include": "#alert" },
                	{ "include": "#every" },
                	{ "include": "#mode" },
                	{ "include": "#onreboot" },
                	{ "include": "#group" },
                	{ "include": "#depend"
				}]
			},{
				"begin": "(?i)\\b(check[ ]+network[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.checknetwork.monit" },
					"2": { "name": "constant.character.monit" }
				},
				"patterns": [{
					"match": "(?i)\\b((with[ ]+)?address[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.checknetwork.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{
					"match": "(?i)\\b((with[ ]+)?interface[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.checknetwork.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#programs" },
					{ "include": "#linkstatus" },
					{ "include": "#linkspeed" },
					{ "include": "#linksaturation" },
					{ "include": "#upload" },
					{ "include": "#download" },
					{ "include": "#actionrate" },
					{ "include": "#every" },
					{ "include": "#mode" },
					{ "include": "#onreboot" },
					{ "include": "#alert" },
					{ "include": "#group" },
					{ "include": "#depend"
				}]
			},{
				"begin": "(?i)\\b(check[ ]+system[ ]+)(\\$HOST|(\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.checksystem.monit" },
					"2": { "name": "constant.character.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#noises" },					
					{ "include": "#programs" },
					{ "include": "#actionrate" },
					{ "include": "#alert" },
					{ "include": "#every" },
					{ "include": "#mode" },
					{ "include": "#onreboot" },
					{ "include": "#group" },
					{ "include": "#depend" },
					{ "include": "#resourcesystem" },
					{ "include": "#uptime" },
					{ "include": "#filedescriptorssystem"
				}]
			},{
				"begin": "(?i)\\b(check[ ]+fifo[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.checkfifo.monit" },
					"2": { "name": "constant.character.monit" }
				},
				"patterns": [{
					"match": "(?i)\\b(path[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.checkfifo.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#programs" },
					{ "include": "#exist" },
					{ "include": "#timestamp" },
					{ "include": "#actionrate" },
					{ "include": "#every" },
					{ "include": "#alert" },
					{ "include": "#permission" },
					{ "include": "#uid" },
					{ "include": "#gid" },
					{ "include": "#hardlink" },
					{ "include": "#mode" },
					{ "include": "#onreboot" },
					{ "include": "#group" },
					{ "include": "#depend"
				}]
			},{
				"begin": "(?i)\\b(check[ ]+program[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.checkprogram.monit" },
					"2": { "name": "constant.character.monit" }
				},
				"patterns": [{
					"match": "(?i)\\b((with[ ]+)?path[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.checkprogram.monit" },
						"3": { "name": "constant.character.monit" }
					}
				},{
					"match": "(?i)\\b((with[ ]+)?timeout[ ]+)([\\d]+)([ ]+(seconds|second|s))?\\b",
					"captures": {
						"1": { "name": "keyword.control.checkprogram.monit" },
						"3": { "name": "constant.numeric.monit" },
						"4": { "name": "support.type.second.monit" }
					}
				},{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#programs" },
					{ "include": "#actionrate" },
					{ "include": "#alert" },
					{ "include": "#every" },
					{ "include": "#mode" },
					{ "include": "#onreboot" },
					{ "include": "#group" },
					{ "include": "#depend" },
					{ "include": "#statusvalue" },
					{ "include": "#programmatch" },
					{ "include": "#useroption"
				}]
			}]
		},
		"programs": {
			"comment": "Monit programs",
			"patterns": [{
				"match": "(?i)\\b((start|stop|restart)[ ]+(program(s)?[ ]+)?(=[ ]+)?)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.program.monit" },
					"6": { "name": "constant.character.monit" }
				}
			},{
				"match": "(?i)\\b((uid|gid)[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.program.monit" },
					"3": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b((uid|gid)[ ]+)([\\w\\-_.\\/:#%]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.program.monit" },
					"3": { "name": "constant.character.monit" }
				}
			},{
				"match": "(?i)\\b((with[ ]+)?timeout[ ]+)([\\d]+)([ ]+(seconds|second|s))?\\b",
				"captures": {
					"1": { "name": "keyword.control.program.monit" },
					"3": { "name": "constant.numeric.monit" },
					"4": { "name": "support.type.second.monit" }
				}
			},{ "include": "#argument"
			}]
		},
		"argument": {
			"comment": "Monit argument",
            "patterns": [{
				"name": "string.quoted.double.argument.monit",
				"begin": "\"",
				"end": "\"",
				"patterns": [{ "include": "source.shell" 
                }]
            },{
                "name": "string.quoted.single.argument.monit",
                "begin": "'",
                "end": "'",
				"patterns": [{ "include": "source.shell" 
				}]
			},{
				"name": "constant.character.argument.monit",
				"match": "(\\/[\\w\\-_.\\/:#%]+)"
        	}]
		},
		"useroption": {
			"comment": "Monit user options",
			"patterns": [{
				"match": "(?i)\\b((uid|gid)[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.useroption.monit" },
					"3": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b((uid|gid)[ ]+)([\\w\\-_.\\/:#%]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.useroption.monit" },
					"3": { "name": "constant.character.monit" }
				}
			}]
		},
		"username": {
			"comment": "Monit user names",
			"patterns": [{
				"match": "(?i)\\b(username[ ]+)([\\w\\-_.]+(@[\\w\\-_.]*)?)\\b",
				"captures": {
					"1": { "name": "keyword.control.useroption.monit" },
					"2": { "name": "constant.character.monit" }
				}
			},{
				"match": "(?i)\\b(username[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.useroption.monit" },
					"2": { "name": "constant.character.monit" }
				}
			}]
		},
		"password": {
			"comment": "Monit password",
			"patterns": [{
				"match": "(?i)\\b(password[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.password.monit" },
					"2": { "name": "constant.character.monit" }
				}
			}]
		},
		"database": {
			"comment": "Monit database",
			"patterns": [{
				"match": "(?i)\\b(password[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.database.monit" },
					"2": { "name": "constant.character.monit" }
				}
			}]
		},
		"hostname": {
			"comment": "Monit hostname",
			"patterns": [{
				"match": "(?i)\\b(hostname[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.hostname.monit" },
					"2": { "name": "constant.character.monit" }
				}
			}]
		},
		"connection": {
			"comment": "Monit connection tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+(failed|succeeded)[ ]+host[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))([ ]+port[ ]+)([\\d]+)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.connection.monit" },
					"3": { "name": "constant.character.monit" },
					"7": { "name": "keyword.control.connection.monit" },
					"8": { "name": "constant.numeric.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#ip" },
					{ "include": "#type" },
					{ "include": "#protocol" },
					{ "include": "#sendexpect" },
					{ "include": "#urloption" },
					{ "include": "#connectiontimeout" },
					{ "include": "#responsetime" },
					{ "include": "#outgoing" },
					{ "include": "#retry" },
					{ "include": "#ssl" },
					{ "include": "#sslchecksum" },
					{ "include": "#sslexpire" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+(failed|succeeded)[ ]+port[ ]+)([\\d]+)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.connection.monit" },
					"3": { "name": "constant.numeric.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#ip" },
					{ "include": "#type" },
					{ "include": "#protocol" },
					{ "include": "#sendexpect" },
					{ "include": "#urloption" },
					{ "include": "#connectiontimeout" },
					{ "include": "#responsetime" },
					{ "include": "#outgoing" },
					{ "include": "#retry" },
					{ "include": "#ssl" },
					{ "include": "#sslchecksum" },
					{ "include": "#sslexpire" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"connectionoption": {
			"comment": "Monit connection tests",
			"patterns": [{ "include": "#comments" },
				{ "include": "#ip" },
				{ "include": "#type" },
				{ "include": "#protocol" },
				{ "include": "#sendexpect" },
				{ "include": "#urloption" },
				{ "include": "#connectiontimeout" },
				{ "include": "#responsetime" },
				{ "include": "#outgoing" },
				{ "include": "#retry" },
				{ "include": "#ssl" },
				{ "include": "#sslchecksum" },
				{ "include": "#sslexpire" },
				{ "include": "#rates"
			}]
		},
		"connectionurl": {
			"comment": "Monit connection url tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+(failed|succeeded)[ ]+url[ ]+)(([\\w]+:\\/\\/[\\w\\-_.]+)(:[\\d]+)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.connectionurl.monit" },
					"3": { "name": "constant.character.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#urloption" },
					{ "include": "#connectiontimeout" },
					{ "include": "#retry" },
					{ "include": "#ssl" },
					{ "include": "#sslchecksum" },
					{ "include": "#sslexpire" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"connectionunix": {
			"comment": "Monit connection socket tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+(failed|succeeded)[ ]+unix(socket)?[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.connectionunix.monit" },
					"4": { "name": "constant.character.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#type" },
					{ "include": "#protocol" },
					{ "include": "#sendexpect" },
					{ "include": "#connectiontimeout" },
					{ "include": "#responsetime" },
					{ "include": "#retry" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"connectionicmp": {
			"comment": "Monit connection icmp tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+(failed|succeeded)[ ]+icmp)\\b",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.connectionicmp.monit" }
				},
				"patterns": [{ "include": "#icmpcount" },
					{ "include": "#icmpsize" },
					{ "include": "#icmptimeout" },
					{ "include": "#icmpoutgoing" },
					{ "include": "#responsetime" },
					{ "include": "#rates" },
					{ "include": "#comments"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+(failed|succeeded)[ ]+ping(4|6)?)\\b",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.connectionicmp.monit" }
				},
				"patterns": [{ "include": "#icmpcount" },
					{ "include": "#icmpsize" },
					{ "include": "#icmptimeout" },
					{ "include": "#icmpoutgoing" },
					{ "include": "#responsetime" },
					{ "include": "#rates" },
					{ "include": "#comments"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"host": {
			"comment": "Monit host",
			"patterns": [{
				"match": "(?i)\\b(host[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.host.monit" },
					"2": { "name": "constant.character.monit" }
				}
			}]
		},
		"port": {
			"comment": "Monit port",
			"patterns": [{
				"match": "(?i)\\b(port[ ]+)([\\d]]+)",
				"captures": {
					"1": { "name": "keyword.control.port.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			}]
		},
		"unixsocket": {
			"comment": "Monit unixsocket",
			"patterns": [{
				"match": "(?i)\\b(unixsocket[ ]+)([\"]\\/[^\"]+[\"]|[']\\/[^']+[']|\\/[\\w\\-_./*?]+)",
				"captures": {
					"1": { "name": "keyword.control.unixsocket.monit" },
					"2": { "name": "constant.character.monit" }
				}
			}]
		},
		"ip": {
			"comment": "Monit ip",
			"patterns": [{
				"match": "(?i)\\b(ipv4|ipv6)",
				"captures": {
					"1": { "name": "keyword.control.ip.monit" }
				}
			}]
		},
		"type": {
			"comment": "Monit type",
			"patterns": [{
				"match": "(?i)\\b(type[ ]+(tcp|tcpssl|udp))",
				"captures": {
					"1": { "name": "keyword.control.type.monit" }
				}
			}]
		},
		"outgoing": {
			"comment": "Monit outgoing",
			"patterns": [{
				"match": "(?i)\\b(address[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.outgoing.monit" },
					"2": { "name": "constant.character.monit" }
				}
			}]
		},
		"protocol": {
			"comment": "Monit protocol",
			"patterns": [{
				"begin": "(?i)\\b(proto(col)?[ ]+apache-status)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				},
				"patterns": [{
					"name": "keyword.control.protocol.monit",
					"match": "(?i)\\b(path[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))"
				},{
					"name": "keyword.control.protocol.monit",
					"match": "(?i)\\b(loglimit|closelimit|dnslimit|keepalivelimit|replylimit|requestlimit|startlimit|waitlimit|gracefullimit|cleanuplimit)"
				},{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)([ ]?(percent|%))?"
				},{ "include": "#comments" },
					{ "include": "#username" },
					{ "include": "#password" },
					{ "include": "#operators" },
					{ "include": "#connectionoption"
				}]
			},{
				"match": "(?i)\\b(proto(col)?[ ]+(clamav|default|dns|dwp|fail2ban|ftp|gps))",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				}
			},{
				"begin": "(?i)\\b(proto(col)?[ ]+(https|http))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				},
				"patterns": [{
					"match": "(?i)\\b(checksum[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.protocol.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{
					"match": "(?i)\\b(method[ ]+(get|head))",
					"captures": {
						"1": { "name": "keyword.control.protocol.monit" }
					}
				},{
					"match": "(?i)\\b(hostheader[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.protocol.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{					 
					"begin": "(\\[)",
					"end": "(\\])",
					"captures": {
						"1": { "name": "keyword.control.protocol.monit" }
					},
					"patterns": [{
						"match": "(?i)\\b((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
						"captures": {
							"1": { "name": "constant.character.monit" }
						}		
					}]
				},{ "include": "#comments" },
					{ "include": "#username" },
					{ "include": "#password" },
					{ "include": "#request" },
					{ "include": "#status" },
					{ "include": "#connectionoption"
				}]
			},{
				"match": "(?i)\\b(proto(col)?[ ]+(imaps|imap|ldap2|ldap3|lmtp|memcache|mongodb))",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				}
			},{
				"begin": "(?i)\\b(proto(col)?[ ]+mqtt)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#username" },
					{ "include": "#password" },
					{ "include": "#connectionoption"
				}]
			},{
				"begin": "(?i)\\b(proto(col)?[ ]+(mysqls|mysql))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				},
				"patterns": [{
					"name": "keyword.control.protocol.monit",
					"match": "(?i)\\b(rsakey[ ]+checksum([ ]+(md5|sha1))?([ ]+(equal|eq|==|=))?)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.protocol.monit" },
						"4": { "name": "keyword.operator.monit" },
						"5": { "name": "constant.character.monit" }
					}
				},{ "include": "#comments" },
					{ "include": "#username" },
					{ "include": "#password" },
					{ "include": "#connectionoption"
				}]
			},{
				"match": "(?i)\\b(proto(col)?[ ]+(nntp|ntp3))",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				}
			},{
				"begin": "(?i)\\b(proto(col)?[ ]+pgsql)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#username" },
					{ "include": "#password" },
					{ "include": "#database" },
					{ "include": "#connectionoption"
				}]
			},{
				"match": "(?i)\\b(proto(col)?[ ]+(pops|pop|postfix-policy))",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				}
			},{
				"match": "(?i)\\b(proto(col)?[ ]+radius)",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				},
				"patterns": [{ "include": "#comments"
				},{
					"name": "keyword.control.protocol.monit",
					"match": "(?i)\\b(secret[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.protocol.monit" },
						"2": { "name": "constant.character.monit" }
					}
				}]
			},{
				"match": "(?i)\\b(proto(col)?[ ]+(rdate|redis|rsync|sieve))",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				}
			},{
				"begin": "(?i)\\b(proto(col)?[ ]+sip)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				},
				"patterns": [{
					"name": "keyword.control.protocol.monit",
					"match": "(?i)\\b(target[ ]+)([\\w\\-_.]+(@[\\w\\-_.]*)?)",
					"captures": {
						"1": { "name": "keyword.control.protocol.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{
					"name": "keyword.control.protocol.monit",
					"match": "(?i)\\b(target[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.protocol.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{
					"name": "keyword.control.protocol.monit",
					"match": "(?i)\\b(maxforward[ ]+)([\\d]+)",
					"captures": {
						"1": { "name": "keyword.control.protocol.monit" },
						"2": { "name": "constant.numeric.monit" }
					}
				},{ "include": "#comments" },
					{ "include": "#connectionoption"
				}]
			},{
				"begin": "(?i)\\b(proto(col)?[ ]+(smtps|smtp))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#username" },
					{ "include": "#password" },
					{ "include": "#connectionoption"
				}]
			},{
				"match": "(?i)\\b(proto(col)?[ ]+(spamassassin|ssh|tns))",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				}
			},{
				"begin": "(?i)\\b(proto(col)?[ ]+websocket)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.protocol.monit" }
				},
				"patterns": [{
					"name": "keyword.control.protocol.monit",
					"match": "(?i)\\b(origin[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.protocol.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{
					"name": "keyword.control.protocol.monit",
					"match": "(?i)\\b(request[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.protocol.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{
					"name": "keyword.control.protocol.monit",
					"match": "(?i)\\b(host[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.protocol.monit" },
						"2": { "name": "constant.character.monit" }
					}
				},{
					"name": "keyword.control.protocol.monit",
					"match": "(?i)\\b(version[ ]+)([\\d]+)",
					"captures": {
						"1": { "name": "keyword.control.protocol.monit" },
						"2": { "name": "constant.numeric.monit" }
					}
				},{ "include": "#comments" },
					{ "include": "#connectionoption"
				}]
			}]
		},
		"sendexpect": {
			"comment": "Monit send expect",
			"patterns": [{
				"match": "(?i)\\b(send[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.sendexpect.monit" },
					"2": { "name": "constant.character.monit" }
				}
			},{
				"match": "(?i)\\b(expect[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.sendexpect.monit" },
					"2": { "name": "constant.character.monit" }
				}
			}]
		},
		"websocket": {
			"comment": "Monit web socket",
			"patterns": [{
				"match": "(?i)\\b(origin[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.websocket.monit" },
					"2": { "name": "constant.character.monit" }
				}
			},{
				"match": "(?i)\\b(request[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))\\b",
				"captures": {
					"1": { "name": "keyword.control.websocket.monit" },
					"2": { "name": "constant.character.monit" }
				}
			},{
				"match": "(?i)\\b(host[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.websocket.monit" },
					"2": { "name": "constant.character.monit" }
				}
			},{
				"match": "(?i)\\b(version[ ]+)([\\d]+)",
				"captures": {
					"1": { "name": "keyword.control.websocket.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			}]
		},
		"status": {
			"comment": "Monit status",
			"patterns": [{
				"begin": "(?i)\\b(status)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.status.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)\\b([\\d]+)\\b"
				},{ "include": "#comments" },
					{ "include": "#operators"
				}]
			},{ "include": "#comments"
			}]
		},
		"method": {
			"comment": "Monit method",
			"patterns": [{
				"name": "keyword.control.method.monit",
				"match": "(?i)\\b(method[ ]+(get|head))"
			}]
		},
		"request": {
			"comment": "Monit request",
			"patterns": [{
				"match": "(?i)\\b((and[ ]+)?request[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
					"captures": {
						"1": { "name": "keyword.control.request.monit" },
						"3": { "name": "constant.character.monit" }
					}
			},{
				"match": "(?i)\\b((and[ ]+)?request[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.request.monit" },
					"3": { "name": "constant.character.monit" }
				}
			}]
		},
		"exist": {
			"comment": "Monit exist tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+(does[ ]+)?not[ ]+exist)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.exist.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ](does[ ]+)?+exist)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.exist.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"pid": {
			"comment": "Monit pid tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+changed[ ]+pid)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.pid.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"ppid": {
			"comment": "Monit ppid tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+changed[ ]+ppid)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.ppid.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"uptime": {
			"comment": "Monit uptime tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+uptime)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.uptime.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)\\b([\\d]+)\\b"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#times" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"responsetime": {
			"comment": "Monit response",
			"patterns": [{
				"begin": "(?i)\\b((with[ ]+)responsetime[ ]+)",
				"end": "(?i)\\b(?=(milliseconds|millisecond|ms))\\b",
				"beginCaptures": {
					"1": { "name": "keyword.control.responsetime.monit" }
				},
				"endCaptures": {
					"1": { "name": "support.type.millisecond.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)\\b([\\d]+)\\b"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#seconds"
				}]
			},{
				"begin": "(?i)\\b((with[ ]+)responsetime[ ]+)",
				"end": "(?i)\\b(?=(seconds|second|s))\\b",
				"beginCaptures": {
					"1": { "name": "keyword.control.responsetime.monit" }
				},
				"endCaptures": {
					"1": { "name": "support.type.second.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)\\b([\\d]+)\\b"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#seconds"
				}]
			},{ "include": "#comments" },
				{ "include": "#noises"
			}]
		},
		"icmpcount": {
			"comment": "Monit icmp count",
			"patterns": [{
				"match": "(?i)\\b(count[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.icmpcount.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{ "include": "#comments"
			}]
		},
		"icmpsize": {
			"comment": "Monit icmp size",
			"patterns": [{
				"match": "(?i)\\b(size[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.icmpsize.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{ "include": "#comments"
			}]
		},
		"icmptimeout": {
			"comment": "Monit icmp timeout",
			"patterns": [{
				"begin": "(?i)\\b(timeout[ ]+)",
				"end": "(?i)\\b(?=(if|then))\\b",
				"captures": {
					"1": { "name": "keyword.control.icmptimeout.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)\\b([\\d]+)\\b"
				},{ "include": "#comments" },
					{ "include": "#seconds"
				}]
			},{ "include": "#comments"
			}]
		},
		"icmpoutgoing": {
			"comment": "Monit icmp outgoing",
			"patterns": [{
				"begin": "(?i)\\b(address[ ]+)",
				"end": "(?i)\\b(?=(if|then))\\b",
				"captures": {
					"1": { "name": "keyword.control.icmpoutgoing.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#strings"
				}]
			},{ "include": "#comments"
			}]
		},
		"stoptimeout": {
			"comment": "Monit stop timeout",
			"patterns": [{ "include": "#timeouts"
			}]
		},
		"starttimeout": {
			"comment": "Monit start timeout",
			"patterns": [{ "include": "#timeouts"
			}]
		},
		"restarttimeout": {
			"comment": "Monit restart timeout",
			"patterns": [{ "include": "#timeouts"
			}]
		},
		"programtimeout": {
			"comment": "Monit program timeout",
			"patterns": [{ "include": "#timeouts"
			}]
		},
		"nettimeout": {
			"comment": "Monit net timeout",
			"patterns": [{ "include": "#timeouts"
			}]
		},
		"connectiontimeout": {
			"comment": "Monit connection timeout",
			"patterns": [{ "include": "#timeouts"
			}]
		},
		"timeouts": {
			"comment": "Monit timeout",
			"patterns": [{
				"match": "(?i)\\b((with[ ]+)?timeout[ ]+)([\\d]+)([ ]+(seconds|second|s))?\\b",
				"captures": {
					"1": { "name": "keyword.control.timeout.monit" },
					"3": { "name": "constant.numeric.monit" },
					"4": { "name": "support.type.second.monit" }
				}	
			}]
		},
		"retry": {
			"comment": "Monit retry",
			"patterns": [{
				"begin": "(?i)\\b(retry[ ]+)([\\d]+)",
				"end": "(?i)\\b(?=(if|then))\\b",
				"captures": {
					"1": { "name": "keyword.control.retry.monit" },
					"2": { "name": "constant.numeric.monit" }
				},
				"patterns": [{ "include": "#comments"
				}]
			}]
		},
		"actionrate": {
			"comment": "Monit action rate tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+)([\\d]+[ ]+)(restart(s)?+[ ]+)(within+[ ]+)?([\\d]+[ ]+)(cycle(s)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.actionrate.monit" },
					"2": { "name": "constant.numeric.monit" },
					"3": { "name": "keyword.control.actionrate.monit" },
					"5": { "name": "keyword.control.actionrate.monit" },
					"6": { "name": "constant.numeric.monit" },
					"7": { "name": "support.type.cycle.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{
				"name": "keyword.control.actionrate.monit",
				"match": "(?i)\\b(timeout)\\b"
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"urloption": {
			"comment": "Monit url option",
			"patterns": [{
				"begin": "(?i)\\b(content[ ]+)",
				"end": "(?i)\\b(?=(if|then))\\b",
				"captures": {
					"1": { "name": "keyword.control.urloption.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#urloperators" },
					{ "include": "#strings"
				}]
			}]
		},
		"urloperators": {
			"comment": "Monit url operators",
			"patterns": [{
				"name": "keyword.operator.monit",
				"match": "(?i)(equal|eq|==|=)"
			},{
				"name": "keyword.operator.monit",
				"match": "(?i)(notequal|ne|!=)"
			}]
		},
		"alert": {
			"comment": "Monit alert",
			"patterns": [{
				"begin": "(?i)(alert[ ]+)([\\w\\-_.]+(@[\\w\\-_.]*)?)([ ]+not)?",
				"end": "(?i)\\b(?=(if|then|start|stop|restart|group|depend(s)?|(not[ ]+)?every|check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.alert.monit" },
					"2": { "name": "constant.character.monit" }
				},
				"patterns": [{
					"begin": "(\\{)",
					"end": "(\\})",
					"captures": {
						"1": { "name": "keyword.control.alert.monit" }
					},
					"patterns": [{ "include": "#comments" },
						{ "include": "#noises" },
						{ "include": "#eventoption"
					}]
				},{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#mails" },
					{ "include": "#formats" },
					{ "include": "#reminder"
				}]
			},{
				"begin": "(?i)((noalert|alert)[ ]+)([\\w\\-_.]+(@[\\w\\-_.]*)?)",
				"end": "(?i)\\b(?=(if|then|start|stop|restart|group|depend(s)?|(not[ ]+)?every|check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.alert.monit" },
					"3": { "name": "constant.character.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#mails" },
					{ "include": "#formats" },
					{ "include": "#reminder"
				}]
			}]
		},
		"eventoption": {
			"comment": "Monit event options",
			"patterns": [{
				"name": "support.constant.monit",
				"match": "(?i)(action)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(bytein)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(byteout)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(checksum)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(connection)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(content)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(data)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(exec)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(exist)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(fsflag)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(gid)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(icmp)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(instance)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(invalid)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(link)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(nonexist)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(packetin)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(packetout)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(permission)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(pid)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(ppid)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(resource)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(saturation)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(size)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(speed)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(status)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(timeout)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(timestamp)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(uid)[,]?"
			},{
				"name": "support.constant.monit",
				"match": "(?i)(uptime)[,]?"
			}]
		},
		"formats": {
			"comment": "Monit mail formats",
			"begin": "(?i)(mail-format)",
			"end": "(?i)\\b(?=(if|then|start|stop|restart|group|depend(s)?|(not[ ]+)?every|check|set|include))\\b",
			"captures": {
				"1": { "name": "keyword.control.format.monit" }
			},
			"patterns": [{
				"begin": "(\\{)",
				"end": "(\\})",
				"captures": {
					"1": { "name": "keyword.control.format.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#formatoption"
				}]
			}]
		},
		"formatoption": {
			"comment": "Monit mail format options",
			"patterns": [{
				"match": "(?i)\\b(from:[ ]+)",
				"captures": {
					"1": { "name": "keyword.control.formatoption.monit" }
				}
			},{
				"match": "(?i)\\b(reply-to:[ ]+)",
				"captures": {
					"1": { "name": "keyword.control.formatoption.monit" }
				}
			},{
				"match": "(?i)\\b(subject:[ ]+)",
				"captures": {
					"1": { "name": "keyword.control.formatoption.monit" }
				}
			},{
				"match": "(?i)\\b(message:[ ]+)",
				"captures": {
					"1": { "name": "keyword.control.formatoption.monit" }
				}
			},{ "include": "#constants"
			},{	
				"match": "(?i)\\b([\\w\\-_.\\/:#%!\"$%&/()=?*+'#<>,;: \\[\\]]+)",
				"captures": {
					"1": { "name": "constant.character.monit" }
				}
			}]
		},
		"every": {
			"comment": "Monit every",
			"patterns": [{
				"match": "(?i)\\b((not[ ]+)?every[ ]+)(['\"][\\s]?[0-9,*-]+[\\s][0-9,*-]+[\\s][0-9,*-]+[\\s][0-9,*-]+[\\s][0-9,*-]+[\\s]?['\"])",
				"captures": {
					"1": { "name": "keyword.control.every.monit" },
					"2": { "name": "constant.character.monit" }
				}
			},{
				"match": "(?i)\\b(every[ ]+)([\\d]+[ ]+)(cycle(s)?)",
				"captures": {
					"1": { "name": "keyword.control.every.monit" },
					"2": { "name": "constant.numeric.monit" },
					"3": { "name": "support.type.cycle.monit" }
				}
			}]
		},
		"mode": {
			"comment": "Monit mode",
			"patterns": [{
				"match": "(?i)\\b(mode+[ ]+(active|passive|manual))",
				"captures": {
					"1": { "name": "keyword.control.mode.monit" },
					"2": { "name": "constant.character.monit" }
				}
			}]
		},
		"onreboot": {
			"comment": "Monit on reboot",
			"patterns": [{
				"match": "(?i)\\b(onreboot+[ ]+(start|nostart|laststate))",
				"captures": {
					"1": { "name": "keyword.control.onreboot.monit" },
					"2": { "name": "constant.character.monit" }
				}
			}]
		},
		"group": {
			"comment": "Monit group",
			"patterns": [{
				"begin": "(?i)\\b(group[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"end": "(?i)\\b(?=(if|then|start|stop|restart|group|depend(s)?|(not[ ]+)?every|check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.group.monit" },
					"2": { "name": "constant.character.monit" }
				},
				"patterns": [{ "include": "#comments"
				}]
			}]
		},
		"hostgroups": {
			"comment": "Monit host groups",
			"patterns": [{
				"begin": "\\b(\\[)",
				"end": "\\b(\\])\\b",
				"captures": {
					"1": { "name": "keyword.control.hostgroup.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#strings"
				}]
			}]
		},
		"depend": {
			"comment": "Monit depends",
			"patterns": [{
				"begin": "(?i)\\b(depend(s)?)([ ]+on)?",
				"end": "(?i)\\b(?=(if|then|start|stop|restart|group|depend(s)?|(not[ ]+)?every|check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.depend.monit" },
					"3": { "name": "keyword.control.depend.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#dependant"
				}]
			}]
		},
		"dependant": {
			"comment": "Monit dependant",
			"patterns": [{
				"name": "constant.character.monit",
				"match": "((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))([, ]?)"
			}]
		},
		"statusvalue": {
			"comment": "Monit status value tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+status)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.statusvalue.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)\\b([\\d]+)\\b"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+changed[ ]+status)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.statusvalue.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"resourceprocess": {
			"comment": "Monit resource process tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+cpu([ ]+usage)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcecpuproc.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+total[ ]?cpu([ ]+usage)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcecpuproc.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+mem(ory)?([ ]+usage)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcememproc.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)?"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+total[ ]?mem(ory)?([ ]+usage)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcememproc.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)?"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+thread(s)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcethreads.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+child(ren)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcechild.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+load(avg)?[ ]*\\([ ]*(15|5|1)[ ]*(m|min)[ ]*\\)([ ]+per[ ]+core|[ ]+core)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourceload.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+(disk[ ]+)?read([ ]+activity)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourceread.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{
					"name": "support.type.resourceread.monit",
					"match": "(?i)(operation(s)?(/s)?)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#currenttimes" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+(disk[ ]+)?write([ ]+activity)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcewrite.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{
					"name": "support.type.resourcewrite.monit",
					"match": "(?i)(operation(s)?(/s)?)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#currenttimes" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"resourcesystem": {
			"comment": "Monit resource system tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+load(avg)?[ ]*\\([ ]*(15|5|1)[ ]*(m|min)[ ]*\\)([ ]+per[ ]+core|[ ]+core)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourceload.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+mem(ory)?([ ]+usage)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcemem.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)?"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+swap([ ]+usage)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourceswap.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)?"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+cpu([ ]+usage)?[ ]*\\([ ]*(us|usr|user)?[ ]*\\))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcecpu.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+cpu([ ]+usage)?[ ]*\\([ ]*(sy|sys|system)?[ ]*\\))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcecpu.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+cpu([ ]+usage)?[ ]*\\([ ]*(wa|wait)?[ ]*\\))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcecpu.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+cpu([ ]+usage)?[ ]*\\([ ]*nice[ ]*\\))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcecpu.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+cpu([ ]+usage)?[ ]*\\([ ]*hardirq[ ]*\\))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcecpu.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+cpu([ ]+usage)?[ ]*\\([ ]*softirq[ ]*\\))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcecpu.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+cpu([ ]+usage)?[ ]*\\([ ]*steal[ ]*\\))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcecpu.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+cpu([ ]+usage)?[ ]*\\([ ]*guest[ ]*\\))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcecpu.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+cpu([ ]+usage)?[ ]*\\([ ]*guestnice[ ]*\\))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcecpu.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+cpu([ ]+usage)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.resourcecpu.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)[ ]?(percent|%)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"value": {
			"comment": "Monit values",
			"patterns": [{
				"name": "constant.numeric.monit",
				"match": "[\\d]+([.][\\d]+)?"
			},{
				"name": "constant.numeric.monit",
				"match": "[\\d]+"
			}]
		},
		"timestamptype": {
			"comment": "Monit timestamps",
			"patterns": [{
				"name": "variable.language.atime.monit",
				"match": "(?i)\\b(atime|access time(stamp)?)"
			},{
				"name": "variable.language.ctime.monit",
				"match": "(?i)\\b(ctime|change time(stamp)?)"
			},{
				"name": "variable.language.mtime.monit",
				"match": "(?i)\\b(mtime|modification time(stamp)?|modify time(stamp)?)"
			},{
				"name": "variable.language.time.monit",
				"match": "(?i)\\b(time(stamp)?)"
			}]
		},
		"timestamp": {
			"comment": "Monit timestamp tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+(atime|access time(stamp)?|ctime|change time(stamp)?|mtime|modification time(stamp)?|modify time(stamp)?|time(stamp)?))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.timestamp.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+changed[ ]+(atime|access time(stamp)?|ctime|change time(stamp)?|mtime|modification time(stamp)?|modify time(stamp)?|time(stamp)?))",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.timestamp.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"operators": {
			"comment": "Monit operators",
			"patterns": [{
				"name": "keyword.operator.monit",
				"match": "(?i)(more|greater|gt|>|older)"
			},{
				"name": "keyword.operator.monit",
				"match": "(?i)(ge|=>)"
			},{
				"name": "keyword.operator.monit",
				"match": "(?i)(less|lt|<|newer)"
			},{
				"name": "keyword.operator.monit",
				"match": "(?i)(le|<=)"
			},{
				"name": "keyword.operator.monit",
				"match": "(?i)(equal|eq|==|=)"
			},{
				"name": "keyword.operator.monit",
				"match": "(?i)(notequal|ne|!=)"
			},{
				"name": "keyword.operator.monit",
				"match": "(?i)(changed)"
			}]
		},
		"times": {
			"comment": "Monit times",
			"patterns": [{
				"name": "support.type.time.monit",
				"match": "(?i)\\b(seconds|second|s)"
			},{
				"name": "support.type.time.monit",
				"match": "(?i)\\b(minutes|minute|m)"
			},{
				"name": "support.type.time.monit",
				"match": "(?i)\\b(hours|hour|h)"
			},{
				"name": "support.type.time.monit",
				"match": "(?i)\\b(days|day)"
			},{
				"name": "support.type.time.monit",
				"match": "(?i)\\b(months|month)"
			}]
		},
		"totaltimes": {
			"comment": "Monit total times",
			"patterns": [{
				"name": "support.type.totaltime.monit",
				"match": "(?i)\\b(minutes|minute|m)"
			},{
				"name": "support.type.totaltime.monit",
				"match": "(?i)\\b(hours|hour|h)"
			},{
				"name": "support.type.totaltime.monit",
				"match": "(?i)\\b(days|day)"
			}]
		},
		"currenttimes": {
			"comment": "Monit current times",
			"patterns": [{
				"name": "support.type.currenttime.monit",
				"match": "(?i)\\b(seconds|second|s)"
			}]
		},
		"exectimeouts": {
			"comment": "Monit exec timeouts",
			"patterns": [{
				"match": "(?i)\\b(timeout)([ ]+[\\d]+)([ ]+second(s)?)?\\b",
				"captures": {
					"1": { "name": "keyword.control.repeat.monit" },
					"2": { "name": "constant.numeric.monit" },
					"3": { "name": "support.type.second.monit" }
				}
			}]
		},
		"repeats": {
			"comment": "Monit repeat actions",
			"patterns": [{
				"match": "(?i)\\b(repeat[ ]+every)([ ]+[\\d]+)?([ ]+cycle(s)?)\\b",
				"captures": {
					"1": { "name": "keyword.control.repeat.monit" },
					"2": { "name": "constant.numeric.monit" },
					"3": { "name": "support.type.cycle.monit" }
				}
			}]
		},
		"action": {
			"comment": "Monit actions",
			"patterns": [{
				"match": "(?i)\\b(then[ ]+alert)",
				"captures": {
					"1": { "name": "keyword.control.action.monit" }
				}
			},{
				"match": "(?i)\\b(then[ ]+exec)([ ]+((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+)))",
				"captures": {
					"1": { "name": "keyword.control.action.monit" },
					"2": { "name": "constant.character.monit" }
				},
				"patterns": [{ "include": "#useroption" },
					{ "include": "#exectimeouts" },
					{ "include": "#repeats"
				}]
			},{
				"match": "(?i)\\b(then[ ]+ignore)",
				"captures": {
					"1": { "name": "keyword.control.action.monit" }
				}
			},{
				"match": "(?i)\\b(then[ ]+monitor)",
				"captures": {
					"1": { "name": "keyword.control.action.monit" }
				}
			},{
				"match": "(?i)\\b(then[ ]+restart)",
				"captures": {
					"1": { "name": "keyword.control.action.monit" }
				}
			},{
				"match": "(?i)\\b(then[ ]+start)",
				"captures": {
					"1": { "name": "keyword.control.action.monit" }
				}
			},{
				"match": "(?i)\\b(then[ ]+stop)",
				"captures": {
					"1": { "name": "keyword.control.action.monit" }
				}
			},{
				"match": "(?i)\\b(then[ ]+unmonitor)",
				"captures": {
					"1": { "name": "keyword.control.action.monit" }
				}
			}]
		},
		"rates": {
			"comment": "Monit rate",
			"patterns": [{
				"match": "(?i)\\b(for[ ]+)?([\\d]+)([ ]+time(s)?[ ]+with(in)?)?([ ]+[\\d]+)([ ]+cycle(s)?)\\b",
				"captures": {
					"1": { "name": "keyword.control.repeat.monit" },
					"2": { "name": "constant.numeric.monit" },
					"3": { "name": "keyword.control.repeat.monit" },
					"6": { "name": "constant.numeric.monit" },
					"7": { "name": "support.type.cycle.monit" }
				}
			},{
				"match": "(?i)\\b(for[ ]+)?([\\d]+)([ ]+cycle(s)?)\\b",
				"captures": {
					"1": { "name": "keyword.control.repeat.monit" },
					"2": { "name": "constant.numeric.monit" },
					"3": { "name": "support.type.cycle.monit" }
				}
			}]
		},
		"recoverys": {
			"comment": "Monit recovery",
			"patterns": [{
				"begin": "(?i)\\b(else[ ]+if[ ]+(recovered|passed|succeeded|failed)[ ]+)([\\d]+)\\b",
				"end": "(?i)\\b(?=(then))\\b",
				"captures": {
					"1": { "name": "keyword.control.recovery.monit" },
					"2": { "name": "constant.numeric.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(else)\\b",
				"end": "(?i)\\b(?=(then))\\b",
				"captures": {
					"1": { "name": "keyword.control.recovery.monit" },
					"2": { "name": "constant.numeric.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			}]
		},
		"checksum": {
			"comment": "Monit checksum tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+failed([ ]+(md5|sha1))?[ ]+checksum)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.checksum.monit" }
				},
				"patterns": [{
					"name": "keyword.control.checksum.monit",
					"match": "(?i)(and[ ]+)?(expect)"
				},{ "include": "#comments" },
					{ "include": "#strings" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+changed([ ]+(md5|sha1))?[ ]+checksum)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.checksum.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"hashtype": {
			"comment": "Monit hash type",
			"patterns": [{
				"match": "(?i)\\b((md5|sha1)))",
				"captures": {
					"1": { "name": "keyword.control.hashtype.monit" }
				}
			}]
		},
		"inode": {
			"comment": "Monit inode tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+inode([ ]+usage)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.inode.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)([ ]?(percent|%))?"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+inode[ ]+free)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.inode.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)([ ]?(percent|%))?"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"space": {
			"comment": "Monit space tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+space([ ]+usage)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.space.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)([ ]?(percent|%))?"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+space[ ]+free)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.space.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)([ ]?(percent|%))?"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"read": {
			"comment": "Monit read tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+read([ ]+rate)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.read.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)([ ]+xoperation(s)?(/s)?)?"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#currenttimes" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"write": {
			"comment": "Monit write tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+write([ ]+rate)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.write.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)([ ]+xoperation(s)?(/s)?)?"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#currenttimes" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"servicetime": {
			"comment": "Monit service time tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+service[ ]?time)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.servicetime.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#seconds" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"fsflag": {
			"comment": "Monit fsflag tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+changed[ ]+fsflag(s)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.fsflag.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"unit": {
			"comment": "Monit units",
			"patterns": [{
				"name": "support.type.byte.monit",
				"match": "(?i)\\b(bytes|byte|b)(/s)?"
			},{
				"name": "support.type.kilobyte.monit",
				"match": "(?i)\\b(kilobytes|kilobyte|kb)(/s)?"
			},{
				"name": "support.type.megabyte.monit",
				"match": "(?i)\\b(megabytes|megabyte|mb)(/s)?"
			},{
				"name": "support.type.gigabyte.monit",
				"match": "(?i)\\b(gigabytes|gigabyte|gb)(/s)?"
			}]
		},
		"permission": {
			"comment": "Monit permission tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+failed[ ]+perm(ission)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.permission.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+changed[ ]+perm(ission)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.permission.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"programmatch": {
			"comment": "Monit program match tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+content)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.programmatch.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#urloperations" },
					{ "include": "#strings" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+content[ ]+(not[ ]+)?changed)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.programmatch.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"match": {
			"comment": "Monit match tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+content)",
				"end": "(?i)\\b(?=(then|if|ignore))\\b",
				"captures": {
					"1": { "name": "keyword.control.match.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#urloperations" },
					{ "include": "#paths" },
					{ "include": "#strings" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(ignore[ ]+content)",
				"end": "(?i)\\b(?=(then|if|ignore))\\b",
				"captures": {
					"1": { "name": "keyword.control.match.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#urloperations" },
					{ "include": "#paths" },
					{ "include": "#strings" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+(not[ ]+)?+match(ing)?)",
				"end": "(?i)\\b(?=(then|if|ignore))\\b",
				"captures": {
					"1": { "name": "keyword.control.match.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#paths" },
					{ "include": "#strings" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(ignore[ ]+(not[ ]+)?+match(ing)?)",
				"end": "(?i)\\b(?=(then|if|ignore))\\b",
				"captures": {
					"1": { "name": "keyword.control.match.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#paths" },
					{ "include": "#strings" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"size": {
			"comment": "Monit size tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+size)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.size.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+changed[ ]+size)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.size.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"hardlink": {
			"comment": "Monit hardlink tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+hardlink)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.hardlink.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+changed[ ]+hardlink)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.hardlink.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"uid": {
			"comment": "Monit uid tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+failed[ ]+uid)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.uid.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#strings" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"euid": {
			"comment": "Monit euid tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+failed[ ]+euid)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.euid.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#strings" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"secattr": {
			"comment": "Monit secattr tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+failed[ ]+security[ ]+attribute(s)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.secattr.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#strings" },
					{ "include": "#paths" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"filedescriptorssystem": {
			"comment": "Monit system filedescriptor tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+filedescriptors)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.filedescriptorssystem.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)([ ]?(percent|%))?"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"filedescriptorsprocess": {
			"comment": "Monit process filedescriptor tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+filedescriptors)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.filedescriptorsprocess.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)([ ]?(percent|%))?"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"filedescriptorsprocesstotal": {
			"comment": "Monit process total filedescriptor tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+total[ ]+filedescriptors)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.filedescriptorsprocess.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"gid": {
			"comment": "Monit gid tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+failed[ ]+gid)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.gid.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#strings" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"linkstatus": {
			"comment": "Monit link status tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+failed[ ]+link)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.linkstatus.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+link[ ]+down)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.linkstatus.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+link[ ]+up)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.linkstatus.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"linkspeed": {
			"comment": "Monit link speed tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+changed[ ]+link)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.linkspeed.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"linksaturation": {
			"comment": "Monit link saturation tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+saturation)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.linksaturation.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)([ ]?(percent|%))?"
				},{ "include": "#comments" },
					{ "include": "#operators" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"upload": {
			"comment": "Monit upload tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+upload(ed)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.upload.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)([ ]+packet(s)?(/s)?)?"
				},{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#currenttimes" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+total[ ]+upload(ed)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.upload.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)([ ]+packet(s)?(/s)?)?"
				},{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#totaltimes" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"download": {
			"comment": "Monit download tests",
			"patterns": [{
				"begin": "(?i)\\b(if[ ]+download(ed)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.download.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)([ ]+packet(s)?(/s)?)?"
				},{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#currenttimes" },
					{ "include": "#rates"
				}]
			},{
				"begin": "(?i)\\b(if[ ]+total[ ]+download(ed)?)",
				"end": "(?i)\\b(?=(then|if))\\b",
				"captures": {
					"1": { "name": "keyword.control.download.monit" }
				},
				"patterns": [{
					"name": "constant.numeric.monit",
					"match": "(?i)([\\d]+)([ ]+packet(s)?(/s)?)?"
				},{ "include": "#comments" },
					{ "include": "#noises" },
					{ "include": "#operators" },
					{ "include": "#units" },
					{ "include": "#totaltimes" },
					{ "include": "#rates"
				}]
			},{ "include": "#comments" },
				{ "include": "#action"
			}]
		},
		"reminder": {
			"comment": "Monit reminder",
			"patterns": [{
				"match": "(?i)\\b(reminder[ ]+)(\\d)([ ]+cycle(s)?)?\\b",
				"captures": {
					"1": { "name": "keyword.control.reminder.monit" },
					"2": { "name": "constant.numeric.monit" },
					"3": { "name": "support.type.cycle.monit" }
				}
			}]
		},
		"includes": {
			"comment": "Monit includes",
			"patterns": [{
				"begin": "(?i)\\b(include)\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "keyword.control.include.monit" }
				},
				"patterns": [{
					"match": "((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%!\"$%&/()=?*+'#<>,;: \\[\\]]+))",
					"captures": {
						"1": { "name": "constant.character.monit" }
					}
				},{ "include": "#comments"
				}]
			}]
		},
		"startdelay": {
			"comment": "Monit start delay",
			"patterns": [{
				"match": "(?i)\\b(start[ ]+delay[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.startdelay.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			}]
		},
		"limit": {
			"comment": "Monit limit options",
			"patterns": [{ "include": "#comments" },
				{ "include": "#limitbuffer" },
				{ "include": "#limittimeout"
			}]
		},
		"limitbuffer": {
			"comment": "Monit buffer limit options",
			"patterns": [{
				"match": "(?i)\\b(sendexpectbuffer[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.buffer.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(filecontentbuffer[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.buffer.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(httpcontentbuffer[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.buffer.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(programoutput[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.buffer.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{ "include": "#comments" },
				{ "include": "#bytes"
			}]
		},
		"limittimeout": {
			"comment": "Monit timeout limit options",
			"patterns": [{
				"match": "(?i)\\b(networktimeout[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.timeout.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(programtimeout[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.timeout.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(stoptimeout[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.timeout.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(starttimeout[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.timeout.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(restarttimeout[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.timeout.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(exectimeout[ ]*:[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.timeout.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{ "include": "#comments" },
				{ "include": "#seconds"
			}]
		},
		"mmonitoption": {
			"comment": "Monit mmonit options",
			"patterns": [{
				"begin": "(?i)\\b(timeout[ ]+)([\\d]+)([ ]+(seconds|second|s))\\b",
				"end": "(?i)\\b(?=(if|then))\\b",
				"captures": {
					"1": { "name": "keyword.control.mmonitoption.monit" },
					"2": { "name": "constant.numeric.monit" },
					"3": { "name": "support.type.second.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#ssl" },
					{ "include": "#sslchecksum" },
					{ "include": "#sslversion" },
					{ "include": "#certmd5" },
					{ "include": "#hostgroups"
				}]
			},{ "include": "#comments"
			}]
		},
		"credentials": {
			"comment": "Monit credential",
			"patterns": [{
				"match": "(?i)\\b(register[ ]+credentials)\\b",
				"captures": {
					"1": { "name": "keyword.control.credentials.monit" }
				}
			}]
		},
		"ssl": {
			"comment": "Monit ssl options",
			"patterns": [{
				"begin": "(?i)\\b((with[ ]+)?(tls|ssl[ ]+enable|enable[ ]+ssl|ssl)[ ]+\\{)",
				"end": "(?i)(?=(\\}))",
				"captures": {
					"1": { "name": "keyword.control.ssl.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#ssloption"
				}]
			}]
		},
		"ssloption": {
			"comment": "Monit ssl options",
			"patterns": [{
				"match": "(?i)\\b(verify[ ]*:[ ]+)(enable|disable)\\b",
				"captures": {
					"1": { "name": "keyword.control.ssloption.monit" },
					"2": { "name": "constant.language.monit" }
				}
			},{
				"match": "(?i)\\b(selfsigned[ ]*:[ ]+)(allow|reject)\\b",
				"captures": {
					"1": { "name": "keyword.control.ssloption.monit" },
					"2": { "name": "constant.language.monit" }
				}
			},{
				"match": "(?i)\\b(version[ ]*:[ ]+)(([-]?(sslv2|sslv3|tlsv1|tlsv11|tlsv12|tlsv13))|auto)\\b",
				"captures": {
					"1": { "name": "keyword.control.ssloption.monit" },
					"2": { "name": "constant.language.monit" }
				}
			},{
				"match": "(?i)\\b(cipher[ ]*:[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.ssloption.monit" },
					"2": { "name": "constant.character.monit" }
				}
			},{
				"match": "(?i)\\b((pemfile|pemchain|pemkey)[ ]*:[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.ssloption.monit" },
					"3": { "name": "constant.character.monit" }
				}
			},{
				"match": "(?i)\\b(clientpemfile[ ]*:[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.ssloption.monit" },
					"2": { "name": "constant.character.monit" }
				}
			},{
				"match": "(?i)\\b((cacertificatefile|cacertificatepath)[ ]*:[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.ssloption.monit" },
					"3": { "name": "constant.character.monit" }
				}
			}]
		},
		"sslexpire": {
			"comment": "Monit ssl expire",
			"patterns": [{
				"match": "(?i)\\b(certificate[ ]+valid[ ]+)((more|greater|gt|>|older)[ ]+)?([\\d]+)([ ]+(days|day))\\b",
				"captures": {
					"1": { "name": "keyword.control.sslchecksum.monit" },
					"2": { "name": "keyword.operator.monit" },
					"4": { "name": "constant.numeric.monit" },
					"5": { "name": "support.type.day.monit" }
				}
			}]
		},
		"sslchecksum": {
			"comment": "Monit ssl checksum",
			"patterns": [{
				"match": "(?i)\\b(certificate[ ]+checksum[ ]+((md5|sha1)[ ]+)?)((equal|eq|==|=)[ ]+)?((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.sslchecksum.monit" },
					"4": { "name": "keyword.operator.monit" },
					"5": { "name": "constant.character.monit" }
				}
			}]
		},
		"checksumoperator": {
			"comment": "Monit checksum operator",
			"patterns": [{
				"match": "(?i)\\b(equal|eq|==|=)\\b",
				"captures": {
					"1": { "name": "keyword.operator.monit" }
				}
			}]			
		},
		"sslversion": {
			"comment": "Monit ssl version",
			"patterns": [{
				"match": "(?i)\\b([-]?(sslv2|sslv3|tlsv1|tlsv11|tlsv12|tlsv13))\\b",
				"captures": {
					"1": { "name": "keyword.control.sslversion.monit" }
				}
			},{
				"match": "(?i)\\b(auto)\\b",			
				"captures": {
					"1": { "name": "keyword.control.sslversion.monit" }
				}
			}]
		},
		"certmd5": {
			"comment": "Monit cert md5",
			"patterns": [{
				"match": "(?i)\\b(certmd5[ ]+)((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.certmd5.monit" },
					"2": { "name": "constant.character.monit" }
				}
			}]
		},
		"mailserver": {
			"comment": "Monit mail server",
			"patterns": [{
				"begin": "(?i)\\b((\"[^\"]*\")|('[^']*')|([\\w\\-_.\\/:#%]+))([ ]+port[ ]+([\\d]+))?\\b",
				"end": "(?i)\\b(?=(check|set|include))\\b",
				"captures": {
					"1": { "name": "constant.character.monit" },
					"2": { "name": "keyword.control.mailserver.monit" },
					"3": { "name": "constant.numeric.monit" }
				},
				"patterns": [{ "include": "#comments" },
					{ "include": "#username" },
					{ "include": "#password" },
					{ "include": "#ssl" },
					{ "include": "#sslchecksum" },
					{ "include": "#sslversion" },
					{ "include": "#certmd5"
				}]
			}]
		},
		"httpdoption": {
			"comment": "Monit httpd options",
			"patterns": [{ "include": "#comments" },
				{ "include": "#ssl" },
				{ "include": "#pemfile" },
				{ "include": "#clientpemfile" },
				{ "include": "#allowselfcert" },
				{ "include": "#signature" },
				{ "include": "#bindaddress" },
				{ "include": "#allow" },
				{ "include": "#httpdport" },
				{ "include": "#httpdsocket" 
			}]
		},
		"pemfile": {
			"comment": "Monit pemfile options",
			"patterns": [{
				"match": "(?i)\\b(pemfile[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.ssl.monit" },
					"2": { "name": "constant.character.monit" }
				}
			}]
		},
		"clientpemfile": {
			"comment": "Monit clientpemfile options",
			"patterns": [{
				"match": "(?i)\\b(clientpemfile[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))",
				"captures": {
					"1": { "name": "keyword.control.ssl.monit" },
					"2": { "name": "constant.character.monit" }
				}
			}]
		},
		"allowselfcert": {
			"comment": "Monit allowselfcert options",
			"patterns": [{
				"match": "(?i)\\b(allowselfcertification)\\b",
				"captures": {
					"1": { "name": "keyword.control.ssl.monit" }
				}
			}]
		},
		"httpdport": {
			"comment": "Monit httpdport options",
			"patterns": [{
				"match": "(?i)\\b((and[ ]+)?port[ ]+)([\\d]+)([ ]+read[-]?only)?\\b",
				"captures": {
					"1": { "name": "keyword.control.httpdport.monit" },
					"3": { "name": "constant.numeric.monit" },
					"4": { "name": "support.parameter.monit" }
				}
			}]
		},
		"httpdsocket": {
			"comment": "Monit httpdsocket options",
			"patterns": [{
				"match": "(?i)\\b(unixsocket[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))\\b",
				"captures": {
					"1": { "name": "keyword.control.httpdsocket.monit" },
					"2": { "name": "constant.character.monit" }
				}
			}]
		},
		"httpdsocketoption": {
			"comment": "Monit httpdsocket options",
			"patterns": [{
				"match": "(?i)\\b((uid|gid)[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.httpdsocketoption.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b((uid|gid)[ ]+)([\"']?[\\w\\-_.\\/:#%]+[\"']?)\\b",
				"captures": {
					"1": { "name": "keyword.control.httpdsocketoption.monit" },
					"2": { "name": "constant.character.monit" }
				}
			},{
				"match": "(?i)\\b(perm(ission)?[ ]+)([\\d]+)\\b",
				"captures": {
					"1": { "name": "keyword.control.httpdsocketoption.monit" },
					"2": { "name": "constant.numeric.monit" }
				}
			},{
				"match": "(?i)\\b(read[-]?only)\\b",
				"captures": {
					"1": { "name": "support.parameter.monit" }
				}
			}]
		},
		"signature": {
			"comment": "Monit signature options",
			"patterns": [{
				"match": "(?i)\\b(signature[ ]+)(enable|disable)\\b",
				"captures": {
					"1": { "name": "keyword.control.signature.monit" },
					"2": { "name": "support.parameter.monit" }
				}
			}]
		},
		"bindaddress": {
			"comment": "Monit bind address options",
			"patterns": [{
				"match": "(?i)((use[ ]+)?address[ ]+)([\\d.\\/]+)",
				"captures": {
					"1": { "name": "keyword.control.bindaddress.monit" },
					"3": { "name": "constant.character.monit" }
				}
			},{
				"match": "(?i)((use[ ]+)?address[ ]+)([\\h:\\/]+)",
				"captures": {
					"1": { "name": "keyword.control.bindaddress.monit" },
					"3": { "name": "constant.character.monit" }
				}
			},{	
				"match": "(?i)((use[ ]+)?address[ ]+)([\\w\\-_.]+)",
				"captures": {
					"1": { "name": "keyword.control.bindaddress.monit" },
					"3": { "name": "constant.character.monit" }
				}
			}]
		},
		"allow": {
			"comment": "Monit allow options",
			"patterns": [{
				"match": "(?i)\\b(allow[ ]+)([\\w\\-_.\\/:#%]+:[\\w\\-_.\\/:#%]+)([ ]+read[-]?only)?\\b",
				"captures": {
					"1": { "name": "keyword.control.allow.monit" },
					"2": { "name": "constant.character.monit" },
					"3": { "name": "support.parameter.monit" }
				}
			},{
				"match": "(?i)\\b(allow[ ]+)(@[\\w\\-_.\\/:#%]+)([ ]+read[-]?only)?\\b",
				"captures": {
					"1": { "name": "keyword.control.allow.monit" },
					"2": { "name": "constant.character.monit" },
					"3": { "name": "support.parameter.monit" }
				}
			},{
				"match": "(?i)\\b(allow[ ]+(cleartext|md5|crypt)[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))([ ]+read[-]?only)?\\b",
				"captures": {
					"1": { "name": "keyword.control.allow.monit" },
					"3": { "name": "constant.character.monit" },
					"7": { "name": "support.parameter.monit" }
				}
			},{
				"match": "(?i)\\b(allow[ ]+)((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))([ ]+read[-]?only)?\\b",
				"captures": {
					"1": { "name": "keyword.control.allow.monit" },
					"2": { "name": "constant.character.monit" },
					"6": { "name": "support.parameter.monit" }
				}
			},{
				"match": "(?i)\\b(allow[ ]+)([\\d.\\/]+)([ ]+read[-]?only)?\\b",
				"captures": {
					"1": { "name": "keyword.control.allow.monit" },
					"2": { "name": "constant.character.monit" },
					"3": { "name": "keyword.control.allow.monit" }
				}
			},{
				"match": "(?i)\\b(allow[ ]+)([\\h:\\/]+)([ ]+read[-]?only)?\\b",
				"captures": {
					"1": { "name": "keyword.control.allow.monit" },
					"2": { "name": "constant.character.monit" },
					"3": { "name": "keyword.control.allow.monit" }
				}
			},{
				"match": "(?i)\\b(allow[ ]+)([\\w\\-_.\\/:#%]+)([ ]+read[-]?only)?\\b",
				"captures": {
					"1": { "name": "keyword.control.allow.monit" },
					"2": { "name": "constant.character.monit" },
					"3": { "name": "keyword.control.allow.monit" }
				}
			}]
		},
		"readonly": {
			"comment": "Monit readonly options",
			"patterns": [{
				"match": "(?i)\\b(read[-]?only)\\b",
				"captures": {
					"1": { "name": "support.parameter.monit" }
				}
			}]
		},
		"units": {
			"comment": "Monit units",
			"patterns": [{
				"name": "support.type.percent.monit",
				"match": "(?i)\\b(percent|%)"
			},{
				"name": "support.type.operation.monit",
				"match": "(?i)\\b(operation(s)?)(/s)?"
			},{
				"name": "support.type.byte.monit",
				"match": "(?i)\\b(bytes|byte|b)(/s)?"
			},{
				"name": "support.type.kilobyte.monit",
				"match": "(?i)\\b(kilobytes|kilobyte|kb)(/s)?"
			},{
				"name": "support.type.megabyte.monit",
				"match": "(?i)\\b(megabytes|megabyte|mb)(/s)?"
			},{
				"name": "support.type.gigabyte.monit",
				"match": "(?i)\\b(gigabytes|gigabyte|gb)(/s)?"
			},{
				"name": "support.type.millisecond.monit",
				"match": "(?i)\\b(milliseconds|millisecond|ms)"
			},{
				"name": "support.type.second.monit",
				"match": "(?i)\\b(seconds|second|s)"
			},{
				"name": "support.type.minute.monit",
				"match": "(?i)\\b(minutes|minute|m)"
			},{
				"name": "support.type.hour.monit",
				"match": "(?i)\\b(hours|hour|h)"
			},{
				"name": "support.type.day.monit",
				"match": "(?i)\\b(days|day)"
			},{
				"name": "support.type.month.monit",
				"match": "(?i)\\b(months|month)"
			}]
		},
		"bytes": {
			"comment": "Monit bytes",
			"patterns": [{
				"name": "support.type.byte.monit",
				"match": "(?i)\\b(bytes|byte|b)(/s)?"
			},{
				"name": "support.type.kilobyte.monit",
				"match": "(?i)\\b(kilobytes|kilobyte|kb)(/s)?"
			},{
				"name": "support.type.megabyte.monit",
				"match": "(?i)\\b(megabytes|megabyte|mb)(/s)?"
			},{
				"name": "support.type.gigabyte.monit",
				"match": "(?i)\\b(gigabytes|gigabyte|gb)(/s)?"
			}]
		},
		"seconds": {
			"comment": "Monit seconds",
			"patterns": [{
				"name": "support.type.millisecond.monit",
				"match": "(?i)\\b(milliseconds|millisecond|ms)"
			},{
				"name": "support.type.second.monit",
				"match": "(?i)\\b(seconds|second|s)"
			}]
		},
		"noises": {
			"comment": "Monit noisy keywords",
			"patterns": [{
				"name": "keyword.other.monit",
				"match": "(?i)\\b(is|as|are|for|via|on(ly)?|with(in|out)?|Xprogram(s)?|and|has|using|use|the|to|sum|than|usage|was|times|but|of|or|does|per|in|last|rate|capacity|activity|option(s)?|ssl[ ]+disable|disable[ ]+ssl)\\b"
			}]
		},
		"hosts": {
			"comment": "Monit hosts",
			"patterns": [{
				"name": "constant.character.host.monit",
				"match": "((\"[\\w\\-_.]+\")|('[\\w\\-_.]+')|([\\w\\-_.]+))"
			}]
		},
		"mails": {
			"comment": "Monit emails",
			"patterns": [{
				"name": "constant.character.email.monit",
				"match": "((\"[\\w\\-_.]+(@[\\w\\-_.]*)?\")|('[\\w\\-_.]+(@[\\w\\-_.]*)?')|([\\w\\-_.]+(@[\\w\\-_.]*)?))"
			}]
		},
		"paths": {
			"comment": "Monit paths",
			"patterns": [{
				"name": "constant.character.path.monit",
				"match": "((\"\\/[^\"]*\")|('\\/[^']*')|(\\/[\\w\\-_.\\/:#%]+))"
			}]
		},
		"strings": {
			"comment": "Monit strings",
            "patterns": [{
            	"name": "string.quoted.other.string.monit",
                "begin": "`",
                "end": "`",
				"patterns": [{ 
                    "name": "constant.character.escape.monit",
                        "match": "\\\\."
                }]
            },{
				"name": "string.quoted.double.string.monit",
				"begin": "\"",
				"end": "\"",
				"patterns": [{ 
            		"name": "constant.character.escape.monit",
                	"match": "\\\\."
                }]
            },{
                "name": "string.quoted.single.string.monit",
                "begin": "'",
                "end": "'",
				"patterns": [{ 
                    "name": "constant.character.escape.monit",
                    "match": "\\\\."
                }]
        	}]
		},
		"values": {
			"comment": "Monit values",
			"patterns": [{
				"name": "constant.numeric.float.value.monit",
				"match": "\\b([+-]?\\d+\\.\\d+)\\b"
			},{
				"name": "constant.numeric.float.value.monit",
				"match": "\\b([+-]?\\d+\\.\\d+([eE][+-]?\\d+)?)\\b"
			},{
				"name": "constant.numeric.integer.value.monit",
				"match": "\\b([+-]?\\d+)\\b"
			}]
		},
		"comments": {
			"comment": "Monit comments",
			"patterns": [{
				"name": "comment.line.monit",
				"begin": "#",
				"end": "$",
				"captures": {
					"0": { "name": "comment.line.monit" }
				},
				"patterns": []
			}]
        },
        "commands": {
            "comment": "Monit shell commands",
            "patterns": [{
				"name": "string.quoted.other.monit",
				"begin": "`",
				"end": "`",
				"patterns": [{ "include": "source.shell" }]
			},{
				"name": "string.quoted.double.monit",
				"begin": "\"",
				"end": "\"",
				"patterns": [{ "include": "source.shell" }]
			},{
				"name": "string.quoted.single.monit",
				"begin": "'",
				"end": "'",
				"patterns": [{ "include": "source.shell" }]
			},{
				"include": "source.shell"
			}]
		},
		"functions": {
			"comment": "Monit functions",
            "patterns": [{
				"name": "support.function.monit",
				"begin": "[\\w\\d_]*\\(",
				"end": "\\)"
			}]
		},
		"constants": {
			"comment": "Monit constant keywords",
			"patterns": [{
				"name": "support.constant.monit",
				"match": "(\\$EVENT|\\$SERVICE|\\$DATE|\\$HOST|\\$ACTION|\\$DESCRIPTION|\\$SYSTEM)"
			}]
		}
	},
	"scopeName": "source.monit"
}
